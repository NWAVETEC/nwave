// This file is generated. Please do not edit manually.
// 
//

// Enclosing macro to prevent multiple inclusion
#ifndef __EMBER_EXI_GENERATED_FILE_GRAMMAR__
#define __EMBER_EXI_GENERATED_FILE_GRAMMAR__


// This file contains the statically generated data for grammar. 

// generated from file: "sep_r60.xsd"
// generate all types: false
// requested types:
//    AbstractDevice  ActiveEndDeviceControlListLink  ActivePower  
//    ActiveTextMessageListLink  ApplianceLoadReduction  ApplianceLoadReductionType  
//    AppliedTargetReduction  Condition  Configuration  ConfigurationLink  
//    CustomerAccountListLink  DERListLink  DERProgramListLink  DRLCCapabilities  
//    DateTimeInterval  DemandResponseProgram  DemandResponseProgramLink  
//    DemandResponseProgramList  DemandResponseProgramListLink  DeviceCapability  
//    DeviceCategoryType  DeviceInformation  DeviceInformationLink  
//    DeviceStatus  DeviceStatusLink  DrResponse  DstRuleType  DutyCycle  
//    EndDevice  EndDeviceControl  EndDeviceControlList  EndDeviceControlListLink  
//    EndDeviceList  EndDeviceListLink  Event  EventStatus  File  FileList  
//    FileListLink  FileStatusLink  FlowReservationRequestListLink  
//    FlowReservationResponseListLink  FunctionSetAssignments  FunctionSetAssignmentsBase  
//    FunctionSetAssignmentsList  FunctionSetAssignmentsListLink  IPAddrListLink  
//    IPInterface  IPInterfaceListLink  IdentifiedObject  LLInterfaceListLink  
//    Link  List  ListLink  LoadShedAvailability  LoadShedAvailabilityLink  
//    LocaleType  LogEvent  LogEventList  LogEventListLink  MessagingProgram  
//    MessagingProgramList  MessagingProgramListLink  MirrorUsagePointListLink  
//    Notification  Offset  OneHourRangeType  PENType  PerCent  PowerConfiguration  
//    PowerOfTenMultiplierType  PowerSourceType  PowerStatusLink  PrepaymentListLink  
//    PriceResponseCfgListLink  PrimacyType  PriorityType  RandomizableEvent  
//    RealEnergy  RegistrationLink  Resource  RespondableResource  
//    RespondableSubscribableIdentifiedObject  Response  ResponseSetListLink  
//    SFDIType  SelfDevice  SelfDeviceLink  SetPoint  Status  SubscribableIdentifiedObject  
//    SubscribableList  SubscribableResource  Subscription  SubscriptionBase  
//    SubscriptionList  SubscriptionListLink  SupportedLocaleListLink  
//    TargetReduction  TariffProfileListLink  Temperature  TextMessage  
//    TextMessageList  TextMessageListLink  TextResponse  Time  TimeConfiguration  
//    TimeLink  TimeOffsetType  TimeType  UnitType  UsagePointListLink  
//    VersionType  mRIDType  

// Qname count: 113
static EmberExiQname const topLevelQnames[] = {
  EMBER_EXI_QNAME_AbstractDevice,   // 0
  EMBER_EXI_QNAME_ActiveEndDeviceControlListLink,   // 1
  EMBER_EXI_QNAME_ActivePower,   // 2
  EMBER_EXI_QNAME_ActiveTextMessageListLink,   // 3
  EMBER_EXI_QNAME_ApplianceLoadReduction,   // 4
  EMBER_EXI_QNAME_ApplianceLoadReductionType,   // 5
  EMBER_EXI_QNAME_AppliedTargetReduction,   // 6
  EMBER_EXI_QNAME_Condition,   // 7
  EMBER_EXI_QNAME_Configuration,   // 8
  EMBER_EXI_QNAME_ConfigurationLink,   // 9
  EMBER_EXI_QNAME_CustomerAccountListLink,   // 10
  EMBER_EXI_QNAME_DERListLink,   // 11
  EMBER_EXI_QNAME_DERProgramListLink,   // 12
  EMBER_EXI_QNAME_DRLCCapabilities,   // 13
  EMBER_EXI_QNAME_DateTimeInterval,   // 14
  EMBER_EXI_QNAME_DemandResponseProgram,   // 15
  EMBER_EXI_QNAME_DemandResponseProgramLink,   // 16
  EMBER_EXI_QNAME_DemandResponseProgramList,   // 17
  EMBER_EXI_QNAME_DemandResponseProgramListLink,   // 18
  EMBER_EXI_QNAME_DeviceCapability,   // 19
  EMBER_EXI_QNAME_DeviceCategoryType,   // 20
  EMBER_EXI_QNAME_DeviceInformation,   // 21
  EMBER_EXI_QNAME_DeviceInformationLink,   // 22
  EMBER_EXI_QNAME_DeviceStatus,   // 23
  EMBER_EXI_QNAME_DeviceStatusLink,   // 24
  EMBER_EXI_QNAME_DrResponse,   // 25
  EMBER_EXI_QNAME_DstRuleType,   // 26
  EMBER_EXI_QNAME_DutyCycle,   // 27
  EMBER_EXI_QNAME_EndDevice,   // 28
  EMBER_EXI_QNAME_EndDeviceControl,   // 29
  EMBER_EXI_QNAME_EndDeviceControlList,   // 30
  EMBER_EXI_QNAME_EndDeviceControlListLink,   // 31
  EMBER_EXI_QNAME_EndDeviceList,   // 32
  EMBER_EXI_QNAME_EndDeviceListLink,   // 33
  EMBER_EXI_QNAME_Event,   // 34
  EMBER_EXI_QNAME_EventStatus,   // 35
  EMBER_EXI_QNAME_File,   // 36
  EMBER_EXI_QNAME_FileList,   // 37
  EMBER_EXI_QNAME_FileListLink,   // 38
  EMBER_EXI_QNAME_FileStatusLink,   // 39
  EMBER_EXI_QNAME_FlowReservationRequestListLink,   // 40
  EMBER_EXI_QNAME_FlowReservationResponseListLink,   // 41
  EMBER_EXI_QNAME_FunctionSetAssignments,   // 42
  EMBER_EXI_QNAME_FunctionSetAssignmentsBase,   // 43
  EMBER_EXI_QNAME_FunctionSetAssignmentsList,   // 44
  EMBER_EXI_QNAME_FunctionSetAssignmentsListLink,   // 45
  EMBER_EXI_QNAME_IPAddrListLink,   // 46
  EMBER_EXI_QNAME_IPInterface,   // 47
  EMBER_EXI_QNAME_IPInterfaceListLink,   // 48
  EMBER_EXI_QNAME_IdentifiedObject,   // 49
  EMBER_EXI_QNAME_LLInterfaceListLink,   // 50
  EMBER_EXI_QNAME_Link,   // 51
  EMBER_EXI_QNAME_List,   // 52
  EMBER_EXI_QNAME_ListLink,   // 53
  EMBER_EXI_QNAME_LoadShedAvailability,   // 54
  EMBER_EXI_QNAME_LoadShedAvailabilityLink,   // 55
  EMBER_EXI_QNAME_LocaleType,   // 56
  EMBER_EXI_QNAME_LogEvent,   // 57
  EMBER_EXI_QNAME_LogEventList,   // 58
  EMBER_EXI_QNAME_LogEventListLink,   // 59
  EMBER_EXI_QNAME_MessagingProgram,   // 60
  EMBER_EXI_QNAME_MessagingProgramList,   // 61
  EMBER_EXI_QNAME_MessagingProgramListLink,   // 62
  EMBER_EXI_QNAME_MirrorUsagePointListLink,   // 63
  EMBER_EXI_QNAME_Notification,   // 64
  EMBER_EXI_QNAME_Offset,   // 65
  EMBER_EXI_QNAME_OneHourRangeType,   // 66
  EMBER_EXI_QNAME_PENType,   // 67
  EMBER_EXI_QNAME_PerCent,   // 68
  EMBER_EXI_QNAME_PowerConfiguration,   // 69
  EMBER_EXI_QNAME_PowerOfTenMultiplierType,   // 70
  EMBER_EXI_QNAME_PowerSourceType,   // 71
  EMBER_EXI_QNAME_PowerStatusLink,   // 72
  EMBER_EXI_QNAME_PrepaymentListLink,   // 73
  EMBER_EXI_QNAME_PriceResponseCfgListLink,   // 74
  EMBER_EXI_QNAME_PrimacyType,   // 75
  EMBER_EXI_QNAME_PriorityType,   // 76
  EMBER_EXI_QNAME_RandomizableEvent,   // 77
  EMBER_EXI_QNAME_RealEnergy,   // 78
  EMBER_EXI_QNAME_RegistrationLink,   // 79
  EMBER_EXI_QNAME_Resource,   // 80
  EMBER_EXI_QNAME_RespondableResource,   // 81
  EMBER_EXI_QNAME_RespondableSubscribableIdentifiedObject,   // 82
  EMBER_EXI_QNAME_Response,   // 83
  EMBER_EXI_QNAME_ResponseSetListLink,   // 84
  EMBER_EXI_QNAME_SFDIType,   // 85
  EMBER_EXI_QNAME_SelfDevice,   // 86
  EMBER_EXI_QNAME_SelfDeviceLink,   // 87
  EMBER_EXI_QNAME_SetPoint,   // 88
  EMBER_EXI_QNAME_SubscribableIdentifiedObject,   // 89
  EMBER_EXI_QNAME_SubscribableList,   // 90
  EMBER_EXI_QNAME_SubscribableResource,   // 91
  EMBER_EXI_QNAME_Subscription,   // 92
  EMBER_EXI_QNAME_SubscriptionBase,   // 93
  EMBER_EXI_QNAME_SubscriptionList,   // 94
  EMBER_EXI_QNAME_SubscriptionListLink,   // 95
  EMBER_EXI_QNAME_SupportedLocaleListLink,   // 96
  EMBER_EXI_QNAME_TargetReduction,   // 97
  EMBER_EXI_QNAME_TariffProfileListLink,   // 98
  EMBER_EXI_QNAME_Temperature,   // 99
  EMBER_EXI_QNAME_TextMessage,   // 100
  EMBER_EXI_QNAME_TextMessageList,   // 101
  EMBER_EXI_QNAME_TextMessageListLink,   // 102
  EMBER_EXI_QNAME_TextResponse,   // 103
  EMBER_EXI_QNAME_Time,   // 104
  EMBER_EXI_QNAME_TimeConfiguration,   // 105
  EMBER_EXI_QNAME_TimeLink,   // 106
  EMBER_EXI_QNAME_TimeOffsetType,   // 107
  EMBER_EXI_QNAME_TimeType,   // 108
  EMBER_EXI_QNAME_UnitType,   // 109
  EMBER_EXI_QNAME_UsagePointListLink,   // 110
  EMBER_EXI_QNAME_VersionType,   // 111
  EMBER_EXI_QNAME_mRIDType,   // 112
};

// Sparse event codes are non-null when qnames are excluded
static int16u const qnameSparseEventCodes[] = {
  0,
  9,
  11,
  15,
  19,
  20,
  21,
  37,
  38,
  39,
  60,
  81,
  85,
  92,
  94,
  97,
  98,
  99,
  100,
  101,
  103,
  104,
  105,
  106,
  107,
  108,
  109,
  110,
  111,
  112,
  113,
  114,
  116,
  117,
  120,
  121,
  122,
  124,
  125,
  127,
  134,
  137,
  138,
  139,
  140,
  141,
  148,
  149,
  151,
  152,
  157,
  158,
  159,
  160,
  161,
  162,
  164,
  165,
  166,
  167,
  169,
  170,
  171,
  182,
  186,
  189,
  190,
  192,
  195,
  197,
  198,
  199,
  201,
  208,
  212,
  213,
  214,
  224,
  241,
  243,
  245,
  247,
  248,
  249,
  254,
  256,
  257,
  258,
  265,
  269,
  270,
  271,
  272,
  273,
  274,
  275,
  281,
  286,
  290,
  291,
  292,
  293,
  294,
  295,
  296,
  297,
  298,
  299,
  303,
  304,
  311,
  312,
  316,
};

#define GRAMMAR_0 GRAMMAR(NO_EE, XSI_TYPE, 0)
#define GRAMMAR_1 GRAMMAR(NO_EE, NO_XSI_TYPE, 13)
#define GRAMMAR_2 GRAMMAR(NO_EE, NO_XSI_TYPE, 14)
#define GRAMMAR_3 GRAMMAR(NO_EE, NO_XSI_TYPE, 15)
#define GRAMMAR_4 GRAMMAR(NO_EE, NO_XSI_TYPE, 16)
#define GRAMMAR_5 GRAMMAR(NO_EE, NO_XSI_TYPE, 17)
#define GRAMMAR_6 GRAMMAR(NO_EE, NO_XSI_TYPE, 18)
#define GRAMMAR_7 GRAMMAR(NO_EE, NO_XSI_TYPE, 19)
#define GRAMMAR_8 GRAMMAR(NO_EE, NO_XSI_TYPE, 20)
#define GRAMMAR_9 GRAMMAR(NO_EE, NO_XSI_TYPE, 23)
#define GRAMMAR_10 GRAMMAR(NO_EE, NO_XSI_TYPE, 24)
#define GRAMMAR_11 GRAMMAR(NO_EE, NO_XSI_TYPE, 25)
#define GRAMMAR_12 GRAMMAR(NO_EE, NO_XSI_TYPE, 26)
#define GRAMMAR_13 GRAMMAR(NO_EE, NO_XSI_TYPE, 27)
#define GRAMMAR_14 GRAMMAR(NO_EE, NO_XSI_TYPE, 28)
#define GRAMMAR_15 GRAMMAR(NO_EE, NO_XSI_TYPE, 29)
#define GRAMMAR_16 GRAMMAR(NO_EE, NO_XSI_TYPE, 23)
#define GRAMMAR_17 GRAMMAR(NO_EE, NO_XSI_TYPE, 31)
#define GRAMMAR_18 GRAMMAR(NO_EE, NO_XSI_TYPE, 32)
#define GRAMMAR_19 GRAMMAR(EE, NO_XSI_TYPE, 33)
#define GRAMMAR_20 GRAMMAR(NO_EE, NO_XSI_TYPE, 47)
#define GRAMMAR_21 GRAMMAR(NO_EE, NO_XSI_TYPE, 48)
#define GRAMMAR_22 GRAMMAR(NO_EE, NO_XSI_TYPE, 23)
#define GRAMMAR_23 GRAMMAR(NO_EE, NO_XSI_TYPE, 52)
#define GRAMMAR_24 GRAMMAR(NO_EE, NO_XSI_TYPE, 23)
#define GRAMMAR_25 GRAMMAR(NO_EE, NO_XSI_TYPE, 54)
#define GRAMMAR_26 GRAMMAR(NO_EE, NO_XSI_TYPE, 47)
#define GRAMMAR_27 GRAMMAR(NO_EE, NO_XSI_TYPE, 57)
#define GRAMMAR_28 GRAMMAR(NO_EE, NO_XSI_TYPE, 58)
#define GRAMMAR_29 GRAMMAR(NO_EE, NO_XSI_TYPE, 71)
#define GRAMMAR_30 GRAMMAR(NO_EE, NO_XSI_TYPE, 76)
#define GRAMMAR_31 GRAMMAR(NO_EE, NO_XSI_TYPE, 77)
#define GRAMMAR_32 GRAMMAR(NO_EE, NO_XSI_TYPE, 78)
#define GRAMMAR_33 GRAMMAR(NO_EE, NO_XSI_TYPE, 79)
#define GRAMMAR_34 GRAMMAR(NO_EE, XSI_TYPE, 80)
#define GRAMMAR_35 GRAMMAR(NO_EE, NO_XSI_TYPE, 85)
#define GRAMMAR_36 GRAMMAR(NO_EE, NO_XSI_TYPE, 86)
#define GRAMMAR_37 GRAMMAR(NO_EE, NO_XSI_TYPE, 89)
#define GRAMMAR_38 GRAMMAR(NO_EE, NO_XSI_TYPE, 90)
#define GRAMMAR_39 GRAMMAR(NO_EE, NO_XSI_TYPE, 23)
#define GRAMMAR_40 GRAMMAR(NO_EE, NO_XSI_TYPE, 91)
#define GRAMMAR_41 GRAMMAR(NO_EE, NO_XSI_TYPE, 92)
#define GRAMMAR_42 GRAMMAR(NO_EE, NO_XSI_TYPE, 93)
#define GRAMMAR_43 GRAMMAR(EE, XSI_TYPE, 106)
#define GRAMMAR_44 GRAMMAR(NO_EE, NO_XSI_TYPE, 117)
#define GRAMMAR_45 GRAMMAR(NO_EE, NO_XSI_TYPE, 118)
#define GRAMMAR_46 GRAMMAR(NO_EE, NO_XSI_TYPE, 119)
#define GRAMMAR_47 GRAMMAR(EE, NO_XSI_TYPE, 120)
#define GRAMMAR_48 GRAMMAR(NO_EE, NO_XSI_TYPE, 147)
#define GRAMMAR_49 GRAMMAR(NO_EE, XSI_TYPE, 148)
#define GRAMMAR_50 GRAMMAR(NO_EE, NO_XSI_TYPE, 150)
#define GRAMMAR_51 GRAMMAR(NO_EE, XSI_TYPE, 23)
#define GRAMMAR_52 GRAMMAR(NO_EE, XSI_TYPE, 151)
#define GRAMMAR_53 GRAMMAR(NO_EE, XSI_TYPE, 152)
#define GRAMMAR_54 GRAMMAR(EE, NO_XSI_TYPE, 153)
#define GRAMMAR_55 GRAMMAR(NO_EE, NO_XSI_TYPE, 23)
#define GRAMMAR_56 GRAMMAR(NO_EE, NO_XSI_TYPE, 158)
#define GRAMMAR_57 GRAMMAR(NO_EE, NO_XSI_TYPE, 159)
#define GRAMMAR_58 GRAMMAR(NO_EE, NO_XSI_TYPE, 161)
#define GRAMMAR_59 GRAMMAR(NO_EE, NO_XSI_TYPE, 162)
#define GRAMMAR_60 GRAMMAR(NO_EE, NO_XSI_TYPE, 163)
#define GRAMMAR_61 GRAMMAR(NO_EE, NO_XSI_TYPE, 166)
#define GRAMMAR_62 GRAMMAR(NO_EE, NO_XSI_TYPE, 167)
#define GRAMMAR_63 GRAMMAR(NO_EE, NO_XSI_TYPE, 168)
#define GRAMMAR_64 GRAMMAR(NO_EE, NO_XSI_TYPE, 169)
#define GRAMMAR_65 GRAMMAR(EE, NO_XSI_TYPE, 171)
#define GRAMMAR_66 GRAMMAR(NO_EE, NO_XSI_TYPE, 174)
#define GRAMMAR_67 GRAMMAR(NO_EE, NO_XSI_TYPE, 175)
#define GRAMMAR_68 GRAMMAR(NO_EE, NO_XSI_TYPE, 175)
#define GRAMMAR_69 GRAMMAR(EE, NO_XSI_TYPE, 176)
#define GRAMMAR_70 GRAMMAR(NO_EE, NO_XSI_TYPE, 17)
#define GRAMMAR_71 GRAMMAR(NO_EE, NO_XSI_TYPE, 17)
#define GRAMMAR_72 GRAMMAR(NO_EE, NO_XSI_TYPE, 23)
#define GRAMMAR_73 GRAMMAR(NO_EE, NO_XSI_TYPE, 178)
#define GRAMMAR_74 GRAMMAR(NO_EE, NO_XSI_TYPE, 179)
#define GRAMMAR_75 GRAMMAR(NO_EE, NO_XSI_TYPE, 17)
#define GRAMMAR_76 GRAMMAR(NO_EE, NO_XSI_TYPE, 17)
#define GRAMMAR_77 GRAMMAR(NO_EE, XSI_TYPE, 180)
#define GRAMMAR_78 GRAMMAR(NO_EE, NO_XSI_TYPE, 185)
#define GRAMMAR_79 GRAMMAR(NO_EE, NO_XSI_TYPE, 23)
#define GRAMMAR_80 GRAMMAR(EE, XSI_TYPE, 23)
#define GRAMMAR_81 GRAMMAR(EE, XSI_TYPE, 186)
#define GRAMMAR_82 GRAMMAR(NO_EE, XSI_TYPE, 189)
#define GRAMMAR_83 GRAMMAR(NO_EE, XSI_TYPE, 194)
#define GRAMMAR_84 GRAMMAR(NO_EE, NO_XSI_TYPE, 197)
#define GRAMMAR_85 GRAMMAR(NO_EE, NO_XSI_TYPE, 175)
#define GRAMMAR_86 GRAMMAR(NO_EE, NO_XSI_TYPE, 198)
#define GRAMMAR_87 GRAMMAR(NO_EE, NO_XSI_TYPE, 23)
#define GRAMMAR_88 GRAMMAR(EE, NO_XSI_TYPE, 211)
#define GRAMMAR_89 GRAMMAR(NO_EE, XSI_TYPE, 213)
#define GRAMMAR_90 GRAMMAR(NO_EE, XSI_TYPE, 216)
#define GRAMMAR_91 GRAMMAR(EE, XSI_TYPE, 217)
#define GRAMMAR_92 GRAMMAR(NO_EE, NO_XSI_TYPE, 219)
#define GRAMMAR_93 GRAMMAR(NO_EE, XSI_TYPE, 221)
#define GRAMMAR_94 GRAMMAR(NO_EE, NO_XSI_TYPE, 223)
#define GRAMMAR_95 GRAMMAR(NO_EE, NO_XSI_TYPE, 224)
#define GRAMMAR_96 GRAMMAR(NO_EE, NO_XSI_TYPE, 225)
#define GRAMMAR_97 GRAMMAR(NO_EE, NO_XSI_TYPE, 226)
#define GRAMMAR_98 GRAMMAR(NO_EE, NO_XSI_TYPE, 227)
#define GRAMMAR_99 GRAMMAR(NO_EE, NO_XSI_TYPE, 228)
#define GRAMMAR_100 GRAMMAR(NO_EE, NO_XSI_TYPE, 229)
#define GRAMMAR_101 GRAMMAR(NO_EE, NO_XSI_TYPE, 234)
#define GRAMMAR_102 GRAMMAR(NO_EE, NO_XSI_TYPE, 235)
#define GRAMMAR_103 GRAMMAR(NO_EE, NO_XSI_TYPE, 236)
#define GRAMMAR_104 GRAMMAR(NO_EE, NO_XSI_TYPE, 239)
#define GRAMMAR_105 GRAMMAR(NO_EE, NO_XSI_TYPE, 241)
#define GRAMMAR_106 GRAMMAR(NO_EE, NO_XSI_TYPE, 23)
#define GRAMMAR_107 GRAMMAR(NO_EE, NO_XSI_TYPE, 174)
#define GRAMMAR_108 GRAMMAR(NO_EE, NO_XSI_TYPE, 174)
#define GRAMMAR_109 GRAMMAR(NO_EE, NO_XSI_TYPE, 17)
#define GRAMMAR_110 GRAMMAR(NO_EE, NO_XSI_TYPE, 242)
#define GRAMMAR_111 GRAMMAR(NO_EE, NO_XSI_TYPE, 175)
#define GRAMMAR_112 GRAMMAR(NO_EE, NO_XSI_TYPE, 47)
#define GRAMMAR_113 GRAMMAR(NO_EE, NO_XSI_TYPE, 1)
#define GRAMMAR_114 GRAMMAR(NO_EE, NO_XSI_TYPE, 2)
#define GRAMMAR_115 GRAMMAR(NO_EE, NO_XSI_TYPE, 3)
#define GRAMMAR_116 GRAMMAR(NO_EE, NO_XSI_TYPE, 4)
#define GRAMMAR_117 GRAMMAR(NO_EE, NO_XSI_TYPE, 5)
#define GRAMMAR_118 GRAMMAR(NO_EE, NO_XSI_TYPE, 6)
#define GRAMMAR_119 GRAMMAR(NO_EE, NO_XSI_TYPE, 7)
#define GRAMMAR_120 GRAMMAR(NO_EE, NO_XSI_TYPE, 8)
#define GRAMMAR_121 GRAMMAR(NO_EE, NO_XSI_TYPE, 9)
#define GRAMMAR_122 GRAMMAR(NO_EE, NO_XSI_TYPE, 10)
#define GRAMMAR_123 GRAMMAR(NO_EE, NO_XSI_TYPE, 11)
#define GRAMMAR_124 GRAMMAR(NO_EE, NO_XSI_TYPE, 12)
#define GRAMMAR_125 GRAMMAR(EE, NO_XSI_TYPE, 65535)
#define GRAMMAR_126 GRAMMAR(NO_EE, NO_XSI_TYPE, 23)
#define GRAMMAR_127 GRAMMAR(NO_EE, NO_XSI_TYPE, 243)
#define GRAMMAR_128 GRAMMAR(NO_EE, NO_XSI_TYPE, 23)
#define GRAMMAR_129 GRAMMAR(NO_EE, NO_XSI_TYPE, 244)
#define GRAMMAR_130 GRAMMAR(NO_EE, NO_XSI_TYPE, 245)
#define GRAMMAR_131 GRAMMAR(NO_EE, XSI_TYPE, 17)
#define GRAMMAR_132 GRAMMAR(NO_EE, NO_XSI_TYPE, 21)
#define GRAMMAR_133 GRAMMAR(NO_EE, NO_XSI_TYPE, 22)
#define GRAMMAR_134 GRAMMAR(NO_EE, NO_XSI_TYPE, 246)
#define GRAMMAR_135 GRAMMAR(NO_EE, NO_XSI_TYPE, 23)
#define GRAMMAR_136 GRAMMAR(NO_EE, NO_XSI_TYPE, 23)
#define GRAMMAR_137 GRAMMAR(NO_EE, NO_XSI_TYPE, 23)
#define GRAMMAR_138 GRAMMAR(NO_EE, NO_XSI_TYPE, 250)
#define GRAMMAR_139 GRAMMAR(NO_EE, NO_XSI_TYPE, 251)
#define GRAMMAR_140 GRAMMAR(NO_EE, XSI_TYPE, 175)
#define GRAMMAR_141 GRAMMAR(NO_EE, NO_XSI_TYPE, 30)
#define GRAMMAR_142 GRAMMAR(NO_EE, NO_XSI_TYPE, 252)
#define GRAMMAR_143 GRAMMAR(NO_EE, NO_XSI_TYPE, 259)
#define GRAMMAR_144 GRAMMAR(NO_EE, NO_XSI_TYPE, 23)
#define GRAMMAR_145 GRAMMAR(EE, NO_XSI_TYPE, 34)
#define GRAMMAR_146 GRAMMAR(EE, NO_XSI_TYPE, 35)
#define GRAMMAR_147 GRAMMAR(EE, NO_XSI_TYPE, 36)
#define GRAMMAR_148 GRAMMAR(EE, NO_XSI_TYPE, 37)
#define GRAMMAR_149 GRAMMAR(EE, NO_XSI_TYPE, 38)
#define GRAMMAR_150 GRAMMAR(EE, NO_XSI_TYPE, 39)
#define GRAMMAR_151 GRAMMAR(EE, NO_XSI_TYPE, 40)
#define GRAMMAR_152 GRAMMAR(EE, NO_XSI_TYPE, 41)
#define GRAMMAR_153 GRAMMAR(EE, NO_XSI_TYPE, 42)
#define GRAMMAR_154 GRAMMAR(EE, NO_XSI_TYPE, 43)
#define GRAMMAR_155 GRAMMAR(EE, NO_XSI_TYPE, 44)
#define GRAMMAR_156 GRAMMAR(EE, NO_XSI_TYPE, 45)
#define GRAMMAR_157 GRAMMAR(EE, NO_XSI_TYPE, 46)
#define GRAMMAR_158 GRAMMAR(NO_EE, NO_XSI_TYPE, 49)
#define GRAMMAR_159 GRAMMAR(NO_EE, NO_XSI_TYPE, 50)
#define GRAMMAR_160 GRAMMAR(NO_EE, NO_XSI_TYPE, 51)
#define GRAMMAR_161 GRAMMAR(NO_EE, NO_XSI_TYPE, 47)
#define GRAMMAR_162 GRAMMAR(NO_EE, NO_XSI_TYPE, 261)
#define GRAMMAR_163 GRAMMAR(NO_EE, NO_XSI_TYPE, 47)
#define GRAMMAR_164 GRAMMAR(NO_EE, NO_XSI_TYPE, 53)
#define GRAMMAR_165 GRAMMAR(EE, NO_XSI_TYPE, 262)
#define GRAMMAR_166 GRAMMAR(NO_EE, NO_XSI_TYPE, 55)
#define GRAMMAR_167 GRAMMAR(NO_EE, NO_XSI_TYPE, 56)
#define GRAMMAR_168 GRAMMAR(NO_EE, NO_XSI_TYPE, 267)
#define GRAMMAR_169 GRAMMAR(NO_EE, NO_XSI_TYPE, 59)
#define GRAMMAR_170 GRAMMAR(NO_EE, NO_XSI_TYPE, 60)
#define GRAMMAR_171 GRAMMAR(NO_EE, NO_XSI_TYPE, 61)
#define GRAMMAR_172 GRAMMAR(NO_EE, NO_XSI_TYPE, 62)
#define GRAMMAR_173 GRAMMAR(NO_EE, NO_XSI_TYPE, 63)
#define GRAMMAR_174 GRAMMAR(NO_EE, NO_XSI_TYPE, 64)
#define GRAMMAR_175 GRAMMAR(NO_EE, NO_XSI_TYPE, 65)
#define GRAMMAR_176 GRAMMAR(NO_EE, NO_XSI_TYPE, 66)
#define GRAMMAR_177 GRAMMAR(NO_EE, NO_XSI_TYPE, 67)
#define GRAMMAR_178 GRAMMAR(NO_EE, NO_XSI_TYPE, 68)
#define GRAMMAR_179 GRAMMAR(NO_EE, NO_XSI_TYPE, 69)
#define GRAMMAR_180 GRAMMAR(NO_EE, NO_XSI_TYPE, 70)
#define GRAMMAR_181 GRAMMAR(EE, NO_XSI_TYPE, 269)
#define GRAMMAR_182 GRAMMAR(NO_EE, NO_XSI_TYPE, 72)
#define GRAMMAR_183 GRAMMAR(NO_EE, NO_XSI_TYPE, 73)
#define GRAMMAR_184 GRAMMAR(NO_EE, NO_XSI_TYPE, 74)
#define GRAMMAR_185 GRAMMAR(NO_EE, NO_XSI_TYPE, 75)
#define GRAMMAR_186 GRAMMAR(NO_EE, NO_XSI_TYPE, 274)
#define GRAMMAR_187 GRAMMAR(NO_EE, NO_XSI_TYPE, 277)
#define GRAMMAR_188 GRAMMAR(NO_EE, NO_XSI_TYPE, 23)
#define GRAMMAR_189 GRAMMAR(NO_EE, NO_XSI_TYPE, 279)
#define GRAMMAR_190 GRAMMAR(NO_EE, NO_XSI_TYPE, 23)
#define GRAMMAR_191 GRAMMAR(NO_EE, NO_XSI_TYPE, 81)
#define GRAMMAR_192 GRAMMAR(NO_EE, NO_XSI_TYPE, 82)
#define GRAMMAR_193 GRAMMAR(NO_EE, NO_XSI_TYPE, 83)
#define GRAMMAR_194 GRAMMAR(NO_EE, NO_XSI_TYPE, 84)
#define GRAMMAR_195 GRAMMAR(NO_EE, NO_XSI_TYPE, 281)
#define GRAMMAR_196 GRAMMAR(NO_EE, NO_XSI_TYPE, 284)
#define GRAMMAR_197 GRAMMAR(NO_EE, NO_XSI_TYPE, 87)
#define GRAMMAR_198 GRAMMAR(NO_EE, NO_XSI_TYPE, 88)
#define GRAMMAR_199 GRAMMAR(NO_EE, NO_XSI_TYPE, 285)
#define GRAMMAR_200 GRAMMAR(NO_EE, NO_XSI_TYPE, 158)
#define GRAMMAR_201 GRAMMAR(NO_EE, NO_XSI_TYPE, 288)
#define GRAMMAR_202 GRAMMAR(NO_EE, NO_XSI_TYPE, 23)
#define GRAMMAR_203 GRAMMAR(NO_EE, NO_XSI_TYPE, 23)
#define GRAMMAR_204 GRAMMAR(NO_EE, NO_XSI_TYPE, 23)
#define GRAMMAR_205 GRAMMAR(NO_EE, NO_XSI_TYPE, 94)
#define GRAMMAR_206 GRAMMAR(NO_EE, NO_XSI_TYPE, 95)
#define GRAMMAR_207 GRAMMAR(NO_EE, NO_XSI_TYPE, 96)
#define GRAMMAR_208 GRAMMAR(NO_EE, NO_XSI_TYPE, 97)
#define GRAMMAR_209 GRAMMAR(NO_EE, NO_XSI_TYPE, 98)
#define GRAMMAR_210 GRAMMAR(NO_EE, NO_XSI_TYPE, 99)
#define GRAMMAR_211 GRAMMAR(NO_EE, NO_XSI_TYPE, 100)
#define GRAMMAR_212 GRAMMAR(NO_EE, NO_XSI_TYPE, 101)
#define GRAMMAR_213 GRAMMAR(NO_EE, NO_XSI_TYPE, 102)
#define GRAMMAR_214 GRAMMAR(NO_EE, NO_XSI_TYPE, 103)
#define GRAMMAR_215 GRAMMAR(NO_EE, NO_XSI_TYPE, 104)
#define GRAMMAR_216 GRAMMAR(NO_EE, NO_XSI_TYPE, 105)
#define GRAMMAR_217 GRAMMAR(EE, NO_XSI_TYPE, 290)
#define GRAMMAR_218 GRAMMAR(EE, NO_XSI_TYPE, 107)
#define GRAMMAR_219 GRAMMAR(EE, NO_XSI_TYPE, 108)
#define GRAMMAR_220 GRAMMAR(EE, NO_XSI_TYPE, 109)
#define GRAMMAR_221 GRAMMAR(EE, NO_XSI_TYPE, 110)
#define GRAMMAR_222 GRAMMAR(EE, NO_XSI_TYPE, 111)
#define GRAMMAR_223 GRAMMAR(EE, NO_XSI_TYPE, 112)
#define GRAMMAR_224 GRAMMAR(EE, NO_XSI_TYPE, 113)
#define GRAMMAR_225 GRAMMAR(EE, NO_XSI_TYPE, 114)
#define GRAMMAR_226 GRAMMAR(EE, NO_XSI_TYPE, 115)
#define GRAMMAR_227 GRAMMAR(EE, NO_XSI_TYPE, 116)
#define GRAMMAR_228 GRAMMAR(NO_EE, NO_XSI_TYPE, 292)
#define GRAMMAR_229 GRAMMAR(NO_EE, NO_XSI_TYPE, 23)
#define GRAMMAR_230 GRAMMAR(NO_EE, NO_XSI_TYPE, 23)
#define GRAMMAR_231 GRAMMAR(EE, NO_XSI_TYPE, 121)
#define GRAMMAR_232 GRAMMAR(EE, NO_XSI_TYPE, 122)
#define GRAMMAR_233 GRAMMAR(NO_EE, NO_XSI_TYPE, 158)
#define GRAMMAR_234 GRAMMAR(EE, NO_XSI_TYPE, 123)
#define GRAMMAR_235 GRAMMAR(EE, NO_XSI_TYPE, 124)
#define GRAMMAR_236 GRAMMAR(EE, NO_XSI_TYPE, 125)
#define GRAMMAR_237 GRAMMAR(EE, NO_XSI_TYPE, 126)
#define GRAMMAR_238 GRAMMAR(EE, NO_XSI_TYPE, 127)
#define GRAMMAR_239 GRAMMAR(EE, NO_XSI_TYPE, 128)
#define GRAMMAR_240 GRAMMAR(EE, NO_XSI_TYPE, 129)
#define GRAMMAR_241 GRAMMAR(EE, NO_XSI_TYPE, 130)
#define GRAMMAR_242 GRAMMAR(EE, NO_XSI_TYPE, 131)
#define GRAMMAR_243 GRAMMAR(EE, NO_XSI_TYPE, 132)
#define GRAMMAR_244 GRAMMAR(EE, NO_XSI_TYPE, 133)
#define GRAMMAR_245 GRAMMAR(NO_EE, NO_XSI_TYPE, 158)
#define GRAMMAR_246 GRAMMAR(EE, NO_XSI_TYPE, 134)
#define GRAMMAR_247 GRAMMAR(EE, NO_XSI_TYPE, 135)
#define GRAMMAR_248 GRAMMAR(EE, NO_XSI_TYPE, 136)
#define GRAMMAR_249 GRAMMAR(EE, NO_XSI_TYPE, 137)
#define GRAMMAR_250 GRAMMAR(EE, NO_XSI_TYPE, 138)
#define GRAMMAR_251 GRAMMAR(EE, NO_XSI_TYPE, 139)
#define GRAMMAR_252 GRAMMAR(EE, NO_XSI_TYPE, 140)
#define GRAMMAR_253 GRAMMAR(EE, NO_XSI_TYPE, 141)
#define GRAMMAR_254 GRAMMAR(NO_EE, NO_XSI_TYPE, 294)
#define GRAMMAR_255 GRAMMAR(EE, NO_XSI_TYPE, 142)
#define GRAMMAR_256 GRAMMAR(EE, NO_XSI_TYPE, 143)
#define GRAMMAR_257 GRAMMAR(NO_EE, XSI_TYPE, 175)
#define GRAMMAR_258 GRAMMAR(EE, NO_XSI_TYPE, 144)
#define GRAMMAR_259 GRAMMAR(EE, NO_XSI_TYPE, 145)
#define GRAMMAR_260 GRAMMAR(NO_EE, XSI_TYPE, 174)
#define GRAMMAR_261 GRAMMAR(EE, NO_XSI_TYPE, 146)
#define GRAMMAR_262 GRAMMAR(NO_EE, NO_XSI_TYPE, 23)
#define GRAMMAR_263 GRAMMAR(NO_EE, NO_XSI_TYPE, 149)
#define GRAMMAR_264 GRAMMAR(EE, NO_XSI_TYPE, 295)
#define GRAMMAR_265 GRAMMAR(NO_EE, NO_XSI_TYPE, 23)
#define GRAMMAR_266 GRAMMAR(NO_EE, NO_XSI_TYPE, 297)
#define GRAMMAR_267 GRAMMAR(NO_EE, NO_XSI_TYPE, 23)
#define GRAMMAR_268 GRAMMAR(EE, NO_XSI_TYPE, 154)
#define GRAMMAR_269 GRAMMAR(EE, NO_XSI_TYPE, 155)
#define GRAMMAR_270 GRAMMAR(EE, NO_XSI_TYPE, 156)
#define GRAMMAR_271 GRAMMAR(EE, NO_XSI_TYPE, 157)
#define GRAMMAR_272 GRAMMAR(NO_EE, NO_XSI_TYPE, 160)
#define GRAMMAR_273 GRAMMAR(NO_EE, NO_XSI_TYPE, 299)
#define GRAMMAR_274 GRAMMAR(NO_EE, NO_XSI_TYPE, 301)
#define GRAMMAR_275 GRAMMAR(NO_EE, NO_XSI_TYPE, 23)
#define GRAMMAR_276 GRAMMAR(NO_EE, NO_XSI_TYPE, 164)
#define GRAMMAR_277 GRAMMAR(NO_EE, NO_XSI_TYPE, 165)
#define GRAMMAR_278 GRAMMAR(NO_EE, NO_XSI_TYPE, 303)
#define GRAMMAR_279 GRAMMAR(NO_EE, NO_XSI_TYPE, 307)
#define GRAMMAR_280 GRAMMAR(NO_EE, NO_XSI_TYPE, 23)
#define GRAMMAR_281 GRAMMAR(NO_EE, NO_XSI_TYPE, 23)
#define GRAMMAR_282 GRAMMAR(NO_EE, NO_XSI_TYPE, 170)
#define GRAMMAR_283 GRAMMAR(NO_EE, NO_XSI_TYPE, 309)
#define GRAMMAR_284 GRAMMAR(EE, NO_XSI_TYPE, 172)
#define GRAMMAR_285 GRAMMAR(EE, NO_XSI_TYPE, 173)
#define GRAMMAR_286 GRAMMAR(EE, NO_XSI_TYPE, 177)
#define GRAMMAR_287 GRAMMAR(NO_EE, NO_XSI_TYPE, 23)
#define GRAMMAR_288 GRAMMAR(NO_EE, NO_XSI_TYPE, 23)
#define GRAMMAR_289 GRAMMAR(NO_EE, NO_XSI_TYPE, 181)
#define GRAMMAR_290 GRAMMAR(NO_EE, NO_XSI_TYPE, 182)
#define GRAMMAR_291 GRAMMAR(NO_EE, NO_XSI_TYPE, 183)
#define GRAMMAR_292 GRAMMAR(NO_EE, NO_XSI_TYPE, 184)
#define GRAMMAR_293 GRAMMAR(NO_EE, NO_XSI_TYPE, 312)
#define GRAMMAR_294 GRAMMAR(NO_EE, NO_XSI_TYPE, 315)
#define GRAMMAR_295 GRAMMAR(EE, NO_XSI_TYPE, 187)
#define GRAMMAR_296 GRAMMAR(EE, NO_XSI_TYPE, 188)
#define GRAMMAR_297 GRAMMAR(NO_EE, NO_XSI_TYPE, 190)
#define GRAMMAR_298 GRAMMAR(NO_EE, NO_XSI_TYPE, 191)
#define GRAMMAR_299 GRAMMAR(NO_EE, NO_XSI_TYPE, 192)
#define GRAMMAR_300 GRAMMAR(NO_EE, NO_XSI_TYPE, 193)
#define GRAMMAR_301 GRAMMAR(EE, NO_XSI_TYPE, 316)
#define GRAMMAR_302 GRAMMAR(NO_EE, NO_XSI_TYPE, 195)
#define GRAMMAR_303 GRAMMAR(NO_EE, NO_XSI_TYPE, 196)
#define GRAMMAR_304 GRAMMAR(NO_EE, NO_XSI_TYPE, 318)
#define GRAMMAR_305 GRAMMAR(NO_EE, NO_XSI_TYPE, 23)
#define GRAMMAR_306 GRAMMAR(NO_EE, NO_XSI_TYPE, 199)
#define GRAMMAR_307 GRAMMAR(NO_EE, NO_XSI_TYPE, 200)
#define GRAMMAR_308 GRAMMAR(NO_EE, NO_XSI_TYPE, 201)
#define GRAMMAR_309 GRAMMAR(NO_EE, NO_XSI_TYPE, 202)
#define GRAMMAR_310 GRAMMAR(NO_EE, NO_XSI_TYPE, 203)
#define GRAMMAR_311 GRAMMAR(NO_EE, NO_XSI_TYPE, 204)
#define GRAMMAR_312 GRAMMAR(NO_EE, NO_XSI_TYPE, 205)
#define GRAMMAR_313 GRAMMAR(NO_EE, NO_XSI_TYPE, 206)
#define GRAMMAR_314 GRAMMAR(NO_EE, NO_XSI_TYPE, 207)
#define GRAMMAR_315 GRAMMAR(NO_EE, NO_XSI_TYPE, 208)
#define GRAMMAR_316 GRAMMAR(NO_EE, NO_XSI_TYPE, 209)
#define GRAMMAR_317 GRAMMAR(NO_EE, NO_XSI_TYPE, 12)
#define GRAMMAR_318 GRAMMAR(EE, NO_XSI_TYPE, 212)
#define GRAMMAR_319 GRAMMAR(NO_EE, XSI_TYPE, 174)
#define GRAMMAR_320 GRAMMAR(NO_EE, NO_XSI_TYPE, 214)
#define GRAMMAR_321 GRAMMAR(NO_EE, NO_XSI_TYPE, 215)
#define GRAMMAR_322 GRAMMAR(EE, NO_XSI_TYPE, 320)
#define GRAMMAR_323 GRAMMAR(NO_EE, NO_XSI_TYPE, 322)
#define GRAMMAR_324 GRAMMAR(EE, NO_XSI_TYPE, 218)
#define GRAMMAR_325 GRAMMAR(NO_EE, NO_XSI_TYPE, 220)
#define GRAMMAR_326 GRAMMAR(NO_EE, NO_XSI_TYPE, 324)
#define GRAMMAR_327 GRAMMAR(NO_EE, NO_XSI_TYPE, 222)
#define GRAMMAR_328 GRAMMAR(NO_EE, NO_XSI_TYPE, 326)
#define GRAMMAR_329 GRAMMAR(NO_EE, NO_XSI_TYPE, 23)
#define GRAMMAR_330 GRAMMAR(NO_EE, NO_XSI_TYPE, 23)
#define GRAMMAR_331 GRAMMAR(NO_EE, NO_XSI_TYPE, 244)
#define GRAMMAR_332 GRAMMAR(NO_EE, NO_XSI_TYPE, 23)
#define GRAMMAR_333 GRAMMAR(NO_EE, NO_XSI_TYPE, 328)
#define GRAMMAR_334 GRAMMAR(NO_EE, NO_XSI_TYPE, 230)
#define GRAMMAR_335 GRAMMAR(NO_EE, NO_XSI_TYPE, 231)
#define GRAMMAR_336 GRAMMAR(NO_EE, NO_XSI_TYPE, 232)
#define GRAMMAR_337 GRAMMAR(NO_EE, NO_XSI_TYPE, 233)
#define GRAMMAR_338 GRAMMAR(NO_EE, NO_XSI_TYPE, 329)
#define GRAMMAR_339 GRAMMAR(NO_EE, NO_XSI_TYPE, 332)
#define GRAMMAR_340 GRAMMAR(NO_EE, NO_XSI_TYPE, 23)
#define GRAMMAR_341 GRAMMAR(NO_EE, NO_XSI_TYPE, 237)
#define GRAMMAR_342 GRAMMAR(NO_EE, NO_XSI_TYPE, 238)
#define GRAMMAR_343 GRAMMAR(NO_EE, NO_XSI_TYPE, 334)
#define GRAMMAR_344 GRAMMAR(NO_EE, NO_XSI_TYPE, 240)
#define GRAMMAR_345 GRAMMAR(NO_EE, NO_XSI_TYPE, 336)
#define GRAMMAR_346 GRAMMAR(NO_EE, NO_XSI_TYPE, 337)
#define GRAMMAR_347 GRAMMAR(NO_EE, NO_XSI_TYPE, 23)
#define GRAMMAR_348 GRAMMAR(NO_EE, NO_XSI_TYPE, 338)
#define GRAMMAR_349 GRAMMAR(NO_EE, NO_XSI_TYPE, 174)
#define GRAMMAR_350 GRAMMAR(NO_EE, NO_XSI_TYPE, 247)
#define GRAMMAR_351 GRAMMAR(NO_EE, NO_XSI_TYPE, 248)
#define GRAMMAR_352 GRAMMAR(NO_EE, NO_XSI_TYPE, 249)
#define GRAMMAR_353 GRAMMAR(NO_EE, NO_XSI_TYPE, 158)
#define GRAMMAR_354 GRAMMAR(NO_EE, NO_XSI_TYPE, 339)
#define GRAMMAR_355 GRAMMAR(NO_EE, NO_XSI_TYPE, 253)
#define GRAMMAR_356 GRAMMAR(NO_EE, NO_XSI_TYPE, 254)
#define GRAMMAR_357 GRAMMAR(NO_EE, NO_XSI_TYPE, 255)
#define GRAMMAR_358 GRAMMAR(NO_EE, NO_XSI_TYPE, 256)
#define GRAMMAR_359 GRAMMAR(NO_EE, NO_XSI_TYPE, 257)
#define GRAMMAR_360 GRAMMAR(NO_EE, NO_XSI_TYPE, 258)
#define GRAMMAR_361 GRAMMAR(NO_EE, NO_XSI_TYPE, 260)
#define GRAMMAR_362 GRAMMAR(EE, NO_XSI_TYPE, 340)
#define GRAMMAR_363 GRAMMAR(NO_EE, NO_XSI_TYPE, 342)
#define GRAMMAR_364 GRAMMAR(EE, NO_XSI_TYPE, 263)
#define GRAMMAR_365 GRAMMAR(EE, NO_XSI_TYPE, 264)
#define GRAMMAR_366 GRAMMAR(EE, NO_XSI_TYPE, 265)
#define GRAMMAR_367 GRAMMAR(EE, NO_XSI_TYPE, 265)
#define GRAMMAR_368 GRAMMAR(NO_EE, NO_XSI_TYPE, 268)
#define GRAMMAR_369 GRAMMAR(EE, NO_XSI_TYPE, 343)
#define GRAMMAR_370 GRAMMAR(EE, NO_XSI_TYPE, 270)
#define GRAMMAR_371 GRAMMAR(EE, NO_XSI_TYPE, 271)
#define GRAMMAR_372 GRAMMAR(EE, NO_XSI_TYPE, 272)
#define GRAMMAR_373 GRAMMAR(EE, NO_XSI_TYPE, 273)
#define GRAMMAR_374 GRAMMAR(NO_EE, NO_XSI_TYPE, 275)
#define GRAMMAR_375 GRAMMAR(NO_EE, NO_XSI_TYPE, 276)
#define GRAMMAR_376 GRAMMAR(NO_EE, NO_XSI_TYPE, 349)
#define GRAMMAR_377 GRAMMAR(NO_EE, NO_XSI_TYPE, 278)
#define GRAMMAR_378 GRAMMAR(EE, NO_XSI_TYPE, 350)
#define GRAMMAR_379 GRAMMAR(NO_EE, NO_XSI_TYPE, 280)
#define GRAMMAR_380 GRAMMAR(EE, NO_XSI_TYPE, 352)
#define GRAMMAR_381 GRAMMAR(NO_EE, NO_XSI_TYPE, 282)
#define GRAMMAR_382 GRAMMAR(NO_EE, NO_XSI_TYPE, 283)
#define GRAMMAR_383 GRAMMAR(NO_EE, NO_XSI_TYPE, 354)
#define GRAMMAR_384 GRAMMAR(NO_EE, NO_XSI_TYPE, 355)
#define GRAMMAR_385 GRAMMAR(NO_EE, NO_XSI_TYPE, 286)
#define GRAMMAR_386 GRAMMAR(NO_EE, NO_XSI_TYPE, 287)
#define GRAMMAR_387 GRAMMAR(NO_EE, NO_XSI_TYPE, 356)
#define GRAMMAR_388 GRAMMAR(NO_EE, NO_XSI_TYPE, 289)
#define GRAMMAR_389 GRAMMAR(EE, NO_XSI_TYPE, 357)
#define GRAMMAR_390 GRAMMAR(EE, NO_XSI_TYPE, 291)
#define GRAMMAR_391 GRAMMAR(NO_EE, NO_XSI_TYPE, 293)
#define GRAMMAR_392 GRAMMAR(EE, NO_XSI_TYPE, 358)
#define GRAMMAR_393 GRAMMAR(EE, NO_XSI_TYPE, 291)
#define GRAMMAR_394 GRAMMAR(NO_EE, NO_XSI_TYPE, 298)
#define GRAMMAR_395 GRAMMAR(NO_EE, NO_XSI_TYPE, 300)
#define GRAMMAR_396 GRAMMAR(NO_EE, NO_XSI_TYPE, 360)
#define GRAMMAR_397 GRAMMAR(NO_EE, NO_XSI_TYPE, 302)
#define GRAMMAR_398 GRAMMAR(EE, NO_XSI_TYPE, 361)
#define GRAMMAR_399 GRAMMAR(NO_EE, NO_XSI_TYPE, 304)
#define GRAMMAR_400 GRAMMAR(NO_EE, NO_XSI_TYPE, 305)
#define GRAMMAR_401 GRAMMAR(NO_EE, NO_XSI_TYPE, 306)
#define GRAMMAR_402 GRAMMAR(NO_EE, NO_XSI_TYPE, 363)
#define GRAMMAR_403 GRAMMAR(NO_EE, NO_XSI_TYPE, 308)
#define GRAMMAR_404 GRAMMAR(EE, NO_XSI_TYPE, 364)
#define GRAMMAR_405 GRAMMAR(NO_EE, NO_XSI_TYPE, 310)
#define GRAMMAR_406 GRAMMAR(NO_EE, NO_XSI_TYPE, 311)
#define GRAMMAR_407 GRAMMAR(NO_EE, NO_XSI_TYPE, 366)
#define GRAMMAR_408 GRAMMAR(NO_EE, NO_XSI_TYPE, 313)
#define GRAMMAR_409 GRAMMAR(NO_EE, NO_XSI_TYPE, 314)
#define GRAMMAR_410 GRAMMAR(NO_EE, NO_XSI_TYPE, 367)
#define GRAMMAR_411 GRAMMAR(NO_EE, NO_XSI_TYPE, 175)
#define GRAMMAR_412 GRAMMAR(EE, NO_XSI_TYPE, 291)
#define GRAMMAR_413 GRAMMAR(NO_EE, NO_XSI_TYPE, 319)
#define GRAMMAR_414 GRAMMAR(EE, NO_XSI_TYPE, 291)
#define GRAMMAR_415 GRAMMAR(NO_EE, NO_XSI_TYPE, 323)
#define GRAMMAR_416 GRAMMAR(EE, NO_XSI_TYPE, 218)
#define GRAMMAR_417 GRAMMAR(NO_EE, NO_XSI_TYPE, 325)
#define GRAMMAR_418 GRAMMAR(NO_EE, NO_XSI_TYPE, 368)
#define GRAMMAR_419 GRAMMAR(NO_EE, NO_XSI_TYPE, 327)
#define GRAMMAR_420 GRAMMAR(EE, NO_XSI_TYPE, 369)
#define GRAMMAR_421 GRAMMAR(NO_EE, NO_XSI_TYPE, 243)
#define GRAMMAR_422 GRAMMAR(NO_EE, NO_XSI_TYPE, 330)
#define GRAMMAR_423 GRAMMAR(NO_EE, NO_XSI_TYPE, 331)
#define GRAMMAR_424 GRAMMAR(NO_EE, NO_XSI_TYPE, 370)
#define GRAMMAR_425 GRAMMAR(NO_EE, NO_XSI_TYPE, 333)
#define GRAMMAR_426 GRAMMAR(EE, NO_XSI_TYPE, 371)
#define GRAMMAR_427 GRAMMAR(NO_EE, NO_XSI_TYPE, 319)
#define GRAMMAR_428 GRAMMAR(NO_EE, NO_XSI_TYPE, 373)
#define GRAMMAR_429 GRAMMAR(NO_EE, NO_XSI_TYPE, 374)
#define GRAMMAR_430 GRAMMAR(NO_EE, XSI_TYPE, 47)
#define GRAMMAR_431 GRAMMAR(EE, NO_XSI_TYPE, 341)
#define GRAMMAR_432 GRAMMAR(EE, NO_XSI_TYPE, 341)
#define GRAMMAR_433 GRAMMAR(NO_EE, NO_XSI_TYPE, 375)
#define GRAMMAR_434 GRAMMAR(EE, NO_XSI_TYPE, 344)
#define GRAMMAR_435 GRAMMAR(EE, NO_XSI_TYPE, 345)
#define GRAMMAR_436 GRAMMAR(EE, NO_XSI_TYPE, 346)
#define GRAMMAR_437 GRAMMAR(EE, NO_XSI_TYPE, 347)
#define GRAMMAR_438 GRAMMAR(EE, NO_XSI_TYPE, 348)
#define GRAMMAR_439 GRAMMAR(NO_EE, NO_XSI_TYPE, 376)
#define GRAMMAR_440 GRAMMAR(EE, NO_XSI_TYPE, 351)
#define GRAMMAR_441 GRAMMAR(EE, NO_XSI_TYPE, 351)
#define GRAMMAR_442 GRAMMAR(EE, NO_XSI_TYPE, 353)
#define GRAMMAR_443 GRAMMAR(EE, NO_XSI_TYPE, 353)
#define GRAMMAR_444 GRAMMAR(NO_EE, NO_XSI_TYPE, 377)
#define GRAMMAR_445 GRAMMAR(EE, NO_XSI_TYPE, 378)
#define GRAMMAR_446 GRAMMAR(NO_EE, NO_XSI_TYPE, 380)
#define GRAMMAR_447 GRAMMAR(EE, NO_XSI_TYPE, 357)
#define GRAMMAR_448 GRAMMAR(EE, NO_XSI_TYPE, 359)
#define GRAMMAR_449 GRAMMAR(EE, NO_XSI_TYPE, 359)
#define GRAMMAR_450 GRAMMAR(NO_EE, NO_XSI_TYPE, 382)
#define GRAMMAR_451 GRAMMAR(EE, NO_XSI_TYPE, 362)
#define GRAMMAR_452 GRAMMAR(EE, NO_XSI_TYPE, 362)
#define GRAMMAR_453 GRAMMAR(EE, NO_XSI_TYPE, 383)
#define GRAMMAR_454 GRAMMAR(EE, NO_XSI_TYPE, 365)
#define GRAMMAR_455 GRAMMAR(EE, NO_XSI_TYPE, 365)
#define GRAMMAR_456 GRAMMAR(NO_EE, NO_XSI_TYPE, 384)
#define GRAMMAR_457 GRAMMAR(NO_EE, NO_XSI_TYPE, 385)
#define GRAMMAR_458 GRAMMAR(EE, NO_XSI_TYPE, 369)
#define GRAMMAR_459 GRAMMAR(NO_EE, NO_XSI_TYPE, 386)
#define GRAMMAR_460 GRAMMAR(EE, NO_XSI_TYPE, 372)
#define GRAMMAR_461 GRAMMAR(EE, NO_XSI_TYPE, 372)
#define GRAMMAR_462 GRAMMAR(NO_EE, NO_XSI_TYPE, 387)
#define GRAMMAR_463 GRAMMAR(NO_EE, NO_XSI_TYPE, 388)
#define GRAMMAR_464 GRAMMAR(NO_EE, NO_XSI_TYPE, 389)
#define GRAMMAR_465 GRAMMAR(NO_EE, NO_XSI_TYPE, 391)
#define GRAMMAR_466 GRAMMAR(EE, NO_XSI_TYPE, 379)
#define GRAMMAR_467 GRAMMAR(NO_EE, NO_XSI_TYPE, 381)
#define GRAMMAR_468 GRAMMAR(NO_EE, NO_XSI_TYPE, 395)
#define GRAMMAR_469 GRAMMAR(NO_EE, NO_XSI_TYPE, 396)
#define GRAMMAR_470 GRAMMAR(EE, NO_XSI_TYPE, 397)
#define GRAMMAR_471 GRAMMAR(NO_EE, NO_XSI_TYPE, 399)
#define GRAMMAR_472 GRAMMAR(NO_EE, NO_XSI_TYPE, 400)
#define GRAMMAR_473 GRAMMAR(NO_EE, NO_XSI_TYPE, 402)
#define GRAMMAR_474 GRAMMAR(NO_EE, NO_XSI_TYPE, 390)
#define GRAMMAR_475 GRAMMAR(NO_EE, NO_XSI_TYPE, 404)
#define GRAMMAR_476 GRAMMAR(NO_EE, NO_XSI_TYPE, 392)
#define GRAMMAR_477 GRAMMAR(NO_EE, NO_XSI_TYPE, 393)
#define GRAMMAR_478 GRAMMAR(NO_EE, NO_XSI_TYPE, 394)
#define GRAMMAR_479 GRAMMAR(NO_EE, NO_XSI_TYPE, 405)
#define GRAMMAR_480 GRAMMAR(NO_EE, NO_XSI_TYPE, 406)
#define GRAMMAR_481 GRAMMAR(NO_EE, NO_XSI_TYPE, 407)
#define GRAMMAR_482 GRAMMAR(EE, NO_XSI_TYPE, 398)
#define GRAMMAR_483 GRAMMAR(NO_EE, NO_XSI_TYPE, 401)
#define GRAMMAR_484 GRAMMAR(NO_EE, NO_XSI_TYPE, 158)
#define GRAMMAR_485 GRAMMAR(NO_EE, NO_XSI_TYPE, 408)
#define GRAMMAR_486 GRAMMAR(NO_EE, NO_XSI_TYPE, 403)
#define GRAMMAR_487 GRAMMAR(NO_EE, NO_XSI_TYPE, 388)
#define GRAMMAR_488 GRAMMAR(NO_EE, NO_XSI_TYPE, 409)
#define GRAMMAR_489 GRAMMAR(NO_EE, NO_XSI_TYPE, 410)
#define GRAMMAR_490 GRAMMAR(NO_EE, XSI_TYPE, 47)
#define GRAMMAR_491 GRAMMAR(NO_EE, XSI_TYPE, 158)
#define GRAMMAR_492 GRAMMAR(NO_EE, NO_XSI_TYPE, 412)
#define GRAMMAR_493 GRAMMAR(NO_EE, NO_XSI_TYPE, 411)
#define GRAMMAR_494 GRAMMAR(EE, NO_XSI_TYPE, 413)
#define GRAMMAR_495 GRAMMAR(NO_EE, NO_XSI_TYPE, 417)
#define GRAMMAR_496 GRAMMAR(EE, NO_XSI_TYPE, 414)
#define GRAMMAR_497 GRAMMAR(EE, NO_XSI_TYPE, 415)
#define GRAMMAR_498 GRAMMAR(EE, NO_XSI_TYPE, 416)
#define GRAMMAR_499 GRAMMAR(NO_EE, NO_XSI_TYPE, 418)
#define GRAMMAR_500 GRAMMAR(NO_EE, NO_XSI_TYPE, 419)

static EmberExiGrammarProduction productions[] = {
// Production count: 420
  RULE(AT, STRING, href, 0, GRAMMAR_113), // 0
  NBIT_RULE(AT, subscribable, 0, GRAMMAR_114, 8), // 1
  SE_RULE(ConfigurationLink, 0, GRAMMAR_115, GRAMMAR_9), // 2
  SE_RULE(DERListLink, 0, GRAMMAR_116, GRAMMAR_11), // 3
  SE_RULE(DeviceInformationLink, 0, GRAMMAR_117, GRAMMAR_22), // 4
  SE_RULE(DeviceStatusLink, 0, GRAMMAR_118, GRAMMAR_24), // 5
  SE_RULE(FileStatusLink, 0, GRAMMAR_119, GRAMMAR_39), // 6
  SE_RULE(IPInterfaceListLink, 0, GRAMMAR_120, GRAMMAR_48), // 7
  SE_RULE(LoadShedAvailabilityLink, 0, GRAMMAR_121, GRAMMAR_55), // 8
  SE_RULE(loadShedDeviceCategory, 0, GRAMMAR_122, GRAMMAR_20), // 9
  SE_RULE(LogEventListLink, 0, GRAMMAR_123, GRAMMAR_59), // 10
  SE_RULE(PowerStatusLink, 0, GRAMMAR_124, GRAMMAR_72), // 11
  SE_RULE(sFDI, 1, GRAMMAR_125, GRAMMAR_85), // 12
  RULE(AT, UNSIGNED_INTEGER, all, 1, GRAMMAR_126), // 13
  SE_RULE(multiplier, 1, GRAMMAR_127, GRAMMAR_70), // 14
  RULE(AT, UNSIGNED_INTEGER, all, 1, GRAMMAR_128), // 15
  SE_RULE(type, 1, GRAMMAR_125, GRAMMAR_5), // 16
  NBIT_RULE(CH, NONE, 1, GRAMMAR_125, 8), // 17
  SE_RULE(type, 1, GRAMMAR_129, GRAMMAR_109), // 18
  SE_RULE(attributeIdentifier, 1, GRAMMAR_130, GRAMMAR_131), // 19
  RULE(AT, STRING, href, 0, GRAMMAR_132), // 20
  NBIT_RULE(AT, subscribable, 0, GRAMMAR_133, 8), // 21
  SE_RULE(currentLocale, 1, GRAMMAR_134, GRAMMAR_56), // 22
  RULE(AT, STRING, href, 1, GRAMMAR_125), // 23
  RULE(AT, UNSIGNED_INTEGER, all, 1, GRAMMAR_135), // 24
  RULE(AT, UNSIGNED_INTEGER, all, 1, GRAMMAR_136), // 25
  RULE(AT, UNSIGNED_INTEGER, all, 1, GRAMMAR_137), // 26
  SE_RULE(averageEnergy, 1, GRAMMAR_138, GRAMMAR_78), // 27
  SE_RULE(duration, 1, GRAMMAR_139, GRAMMAR_140), // 28
  RULE(AT, STRING, href, 0, GRAMMAR_141), // 29
  SE_RULE(mRID, 1, GRAMMAR_142, GRAMMAR_112), // 30
  RULE(AT, UNSIGNED_INTEGER, all, 1, GRAMMAR_143), // 31
  RULE(AT, UNSIGNED_INTEGER, all, 1, GRAMMAR_144), // 32
  RULE(AT, STRING, href, 0, GRAMMAR_145), // 33
  SE_RULE(CustomerAccountListLink, 0, GRAMMAR_146, GRAMMAR_10), // 34
  SE_RULE(DemandResponseProgramListLink, 0, GRAMMAR_147, GRAMMAR_18), // 35
  SE_RULE(DERProgramListLink, 0, GRAMMAR_148, GRAMMAR_12), // 36
  SE_RULE(FileListLink, 0, GRAMMAR_149, GRAMMAR_38), // 37
  SE_RULE(MessagingProgramListLink, 0, GRAMMAR_150, GRAMMAR_62), // 38
  SE_RULE(PrepaymentListLink, 0, GRAMMAR_151, GRAMMAR_73), // 39
  SE_RULE(ResponseSetListLink, 0, GRAMMAR_152, GRAMMAR_84), // 40
  SE_RULE(TariffProfileListLink, 0, GRAMMAR_153, GRAMMAR_98), // 41
  SE_RULE(TimeLink, 0, GRAMMAR_154, GRAMMAR_106), // 42
  SE_RULE(UsagePointListLink, 0, GRAMMAR_155, GRAMMAR_110), // 43
  SE_RULE(EndDeviceListLink, 0, GRAMMAR_156, GRAMMAR_33), // 44
  SE_RULE(MirrorUsagePointListLink, 0, GRAMMAR_157, GRAMMAR_63), // 45
  SE_RULE(SelfDeviceLink, 1, GRAMMAR_125, GRAMMAR_87), // 46
  RULE(CH, BINARY, NONE, 1, GRAMMAR_125), // 47
  RULE(AT, STRING, href, 0, GRAMMAR_158), // 48
  SE_RULE(DRLCCapabilities, 0, GRAMMAR_159, GRAMMAR_13), // 49
  SE_RULE(functionsImplemented, 0, GRAMMAR_160, GRAMMAR_161), // 50
  SE_RULE(lFDI, 1, GRAMMAR_162, GRAMMAR_163), // 51
  RULE(AT, STRING, href, 0, GRAMMAR_164), // 52
  SE_RULE(changedTime, 1, GRAMMAR_165, GRAMMAR_108), // 53
  RULE(AT, STRING, href, 0, GRAMMAR_166), // 54
  SE_RULE(createdDateTime, 0, GRAMMAR_167, GRAMMAR_108), // 55
  SE_RULE(endDeviceLFDI, 1, GRAMMAR_168, GRAMMAR_163), // 56
  SE_RULE(normalValue, 1, GRAMMAR_125, GRAMMAR_131), // 57
  RULE(AT, STRING, href, 0, GRAMMAR_169), // 58
  NBIT_RULE(AT, subscribable, 0, GRAMMAR_170, 8), // 59
  SE_RULE(ConfigurationLink, 0, GRAMMAR_171, GRAMMAR_9), // 60
  SE_RULE(DERListLink, 0, GRAMMAR_172, GRAMMAR_11), // 61
  SE_RULE(DeviceInformationLink, 0, GRAMMAR_173, GRAMMAR_22), // 62
  SE_RULE(DeviceStatusLink, 0, GRAMMAR_174, GRAMMAR_24), // 63
  SE_RULE(FileStatusLink, 0, GRAMMAR_175, GRAMMAR_39), // 64
  SE_RULE(IPInterfaceListLink, 0, GRAMMAR_176, GRAMMAR_48), // 65
  SE_RULE(LoadShedAvailabilityLink, 0, GRAMMAR_177, GRAMMAR_55), // 66
  SE_RULE(loadShedDeviceCategory, 0, GRAMMAR_178, GRAMMAR_20), // 67
  SE_RULE(LogEventListLink, 0, GRAMMAR_179, GRAMMAR_59), // 68
  SE_RULE(PowerStatusLink, 0, GRAMMAR_180, GRAMMAR_72), // 69
  SE_RULE(sFDI, 1, GRAMMAR_181, GRAMMAR_85), // 70
  RULE(AT, STRING, href, 0, GRAMMAR_182), // 71
  RULE(AT, STRING, replyTo, 0, GRAMMAR_183), // 72
  RULE(AT, BINARY, responseRequired, 0, GRAMMAR_184), // 73
  NBIT_RULE(AT, subscribable, 0, GRAMMAR_185, 8), // 74
  SE_RULE(mRID, 1, GRAMMAR_186, GRAMMAR_112), // 75
  RULE(AT, UNSIGNED_INTEGER, all, 1, GRAMMAR_187), // 76
  RULE(AT, UNSIGNED_INTEGER, all, 1, GRAMMAR_188), // 77
  RULE(AT, UNSIGNED_INTEGER, all, 1, GRAMMAR_189), // 78
  RULE(AT, UNSIGNED_INTEGER, all, 1, GRAMMAR_190), // 79
  RULE(AT, STRING, href, 0, GRAMMAR_191), // 80
  RULE(AT, STRING, replyTo, 0, GRAMMAR_192), // 81
  RULE(AT, BINARY, responseRequired, 0, GRAMMAR_193), // 82
  NBIT_RULE(AT, subscribable, 0, GRAMMAR_194, 8), // 83
  SE_RULE(mRID, 1, GRAMMAR_195, GRAMMAR_112), // 84
  SE_RULE(currentStatus, 1, GRAMMAR_196, GRAMMAR_131), // 85
  RULE(AT, STRING, href, 0, GRAMMAR_197), // 86
  SE_RULE(activateTime, 0, GRAMMAR_198, GRAMMAR_108), // 87
  SE_RULE(fileURI, 1, GRAMMAR_199, GRAMMAR_200), // 88
  RULE(AT, UNSIGNED_INTEGER, all, 1, GRAMMAR_201), // 89
  RULE(AT, UNSIGNED_INTEGER, all, 1, GRAMMAR_202), // 90
  RULE(AT, UNSIGNED_INTEGER, all, 1, GRAMMAR_203), // 91
  RULE(AT, UNSIGNED_INTEGER, all, 1, GRAMMAR_204), // 92
  RULE(AT, STRING, href, 0, GRAMMAR_205), // 93
  NBIT_RULE(AT, subscribable, 0, GRAMMAR_206, 8), // 94
  SE_RULE(CustomerAccountListLink, 0, GRAMMAR_207, GRAMMAR_10), // 95
  SE_RULE(DemandResponseProgramListLink, 0, GRAMMAR_208, GRAMMAR_18), // 96
  SE_RULE(DERProgramListLink, 0, GRAMMAR_209, GRAMMAR_12), // 97
  SE_RULE(FileListLink, 0, GRAMMAR_210, GRAMMAR_38), // 98
  SE_RULE(MessagingProgramListLink, 0, GRAMMAR_211, GRAMMAR_62), // 99
  SE_RULE(PrepaymentListLink, 0, GRAMMAR_212, GRAMMAR_73), // 100
  SE_RULE(ResponseSetListLink, 0, GRAMMAR_213, GRAMMAR_84), // 101
  SE_RULE(TariffProfileListLink, 0, GRAMMAR_214, GRAMMAR_98), // 102
  SE_RULE(TimeLink, 0, GRAMMAR_215, GRAMMAR_106), // 103
  SE_RULE(UsagePointListLink, 0, GRAMMAR_216, GRAMMAR_110), // 104
  SE_RULE(mRID, 1, GRAMMAR_217, GRAMMAR_112), // 105
  RULE(AT, STRING, href, 0, GRAMMAR_218), // 106
  SE_RULE(CustomerAccountListLink, 0, GRAMMAR_219, GRAMMAR_10), // 107
  SE_RULE(DemandResponseProgramListLink, 0, GRAMMAR_220, GRAMMAR_18), // 108
  SE_RULE(DERProgramListLink, 0, GRAMMAR_221, GRAMMAR_12), // 109
  SE_RULE(FileListLink, 0, GRAMMAR_222, GRAMMAR_38), // 110
  SE_RULE(MessagingProgramListLink, 0, GRAMMAR_223, GRAMMAR_62), // 111
  SE_RULE(PrepaymentListLink, 0, GRAMMAR_224, GRAMMAR_73), // 112
  SE_RULE(ResponseSetListLink, 0, GRAMMAR_225, GRAMMAR_84), // 113
  SE_RULE(TariffProfileListLink, 0, GRAMMAR_226, GRAMMAR_98), // 114
  SE_RULE(TimeLink, 0, GRAMMAR_227, GRAMMAR_106), // 115
  SE_RULE(UsagePointListLink, 1, GRAMMAR_125, GRAMMAR_110), // 116
  RULE(AT, UNSIGNED_INTEGER, all, 1, GRAMMAR_228), // 117
  RULE(AT, UNSIGNED_INTEGER, all, 1, GRAMMAR_229), // 118
  RULE(AT, UNSIGNED_INTEGER, all, 1, GRAMMAR_230), // 119
  RULE(AT, STRING, href, 0, GRAMMAR_231), // 120
  SE_RULE(ifDescr, 0, GRAMMAR_232, GRAMMAR_233), // 121
  SE_RULE(ifHighSpeed, 0, GRAMMAR_234, GRAMMAR_140), // 122
  SE_RULE(ifInBroadcastPkts, 0, GRAMMAR_235, GRAMMAR_140), // 123
  SE_RULE(ifIndex, 0, GRAMMAR_236, GRAMMAR_140), // 124
  SE_RULE(ifInDiscards, 0, GRAMMAR_237, GRAMMAR_140), // 125
  SE_RULE(ifInErrors, 0, GRAMMAR_238, GRAMMAR_140), // 126
  SE_RULE(ifInMulticastPkts, 0, GRAMMAR_239, GRAMMAR_140), // 127
  SE_RULE(ifInOctets, 0, GRAMMAR_240, GRAMMAR_140), // 128
  SE_RULE(ifInUcastPkts, 0, GRAMMAR_241, GRAMMAR_140), // 129
  SE_RULE(ifInUnknownProtos, 0, GRAMMAR_242, GRAMMAR_140), // 130
  SE_RULE(ifMtu, 0, GRAMMAR_243, GRAMMAR_140), // 131
  SE_RULE(ifName, 0, GRAMMAR_244, GRAMMAR_245), // 132
  SE_RULE(ifOperStatus, 0, GRAMMAR_246, GRAMMAR_131), // 133
  SE_RULE(ifOutBroadcastPkts, 0, GRAMMAR_247, GRAMMAR_140), // 134
  SE_RULE(ifOutDiscards, 0, GRAMMAR_248, GRAMMAR_140), // 135
  SE_RULE(ifOutErrors, 0, GRAMMAR_249, GRAMMAR_140), // 136
  SE_RULE(ifOutMulticastPkts, 0, GRAMMAR_250, GRAMMAR_140), // 137
  SE_RULE(ifOutOctets, 0, GRAMMAR_251, GRAMMAR_140), // 138
  SE_RULE(ifOutUcastPkts, 0, GRAMMAR_252, GRAMMAR_140), // 139
  SE_RULE(ifPromiscuousMode, 0, GRAMMAR_253, GRAMMAR_254), // 140
  SE_RULE(ifSpeed, 0, GRAMMAR_255, GRAMMAR_140), // 141
  SE_RULE(ifType, 0, GRAMMAR_256, GRAMMAR_257), // 142
  SE_RULE(IPAddrListLink, 0, GRAMMAR_258, GRAMMAR_46), // 143
  SE_RULE(lastResetTime, 0, GRAMMAR_259, GRAMMAR_260), // 144
  SE_RULE(lastUpdatedTime, 0, GRAMMAR_261, GRAMMAR_260), // 145
  SE_RULE(LLInterfaceListLink, 1, GRAMMAR_125, GRAMMAR_50), // 146
  RULE(AT, UNSIGNED_INTEGER, all, 1, GRAMMAR_262), // 147
  RULE(AT, STRING, href, 0, GRAMMAR_263), // 148
  SE_RULE(mRID, 1, GRAMMAR_264, GRAMMAR_112), // 149
  RULE(AT, UNSIGNED_INTEGER, all, 1, GRAMMAR_265), // 150
  RULE(AT, UNSIGNED_INTEGER, all, 1, GRAMMAR_266), // 151
  RULE(AT, UNSIGNED_INTEGER, all, 1, GRAMMAR_267), // 152
  RULE(AT, STRING, href, 0, GRAMMAR_268), // 153
  SE_RULE(availabilityDuration, 0, GRAMMAR_269, GRAMMAR_140), // 154
  SE_RULE(DemandResponseProgramLink, 0, GRAMMAR_270, GRAMMAR_16), // 155
  SE_RULE(sheddablePercent, 0, GRAMMAR_271, GRAMMAR_68), // 156
  SE_RULE(sheddablePower, 1, GRAMMAR_125, GRAMMAR_2), // 157
  RULE(CH, STRING, NONE, 1, GRAMMAR_125), // 158
  RULE(AT, STRING, href, 0, GRAMMAR_272), // 159
  SE_RULE(createdDateTime, 1, GRAMMAR_273, GRAMMAR_108), // 160
  RULE(AT, UNSIGNED_INTEGER, all, 1, GRAMMAR_274), // 161
  RULE(AT, UNSIGNED_INTEGER, all, 1, GRAMMAR_275), // 162
  RULE(AT, STRING, href, 0, GRAMMAR_276), // 163
  NBIT_RULE(AT, subscribable, 0, GRAMMAR_277, 8), // 164
  SE_RULE(mRID, 1, GRAMMAR_278, GRAMMAR_112), // 165
  RULE(AT, UNSIGNED_INTEGER, all, 1, GRAMMAR_279), // 166
  RULE(AT, UNSIGNED_INTEGER, all, 1, GRAMMAR_280), // 167
  RULE(AT, UNSIGNED_INTEGER, all, 1, GRAMMAR_281), // 168
  RULE(AT, STRING, href, 0, GRAMMAR_282), // 169
  SE_RULE(subscribedResource, 1, GRAMMAR_283, GRAMMAR_200), // 170
  SE_RULE(coolingOffset, 0, GRAMMAR_284, GRAMMAR_131), // 171
  SE_RULE(heatingOffset, 0, GRAMMAR_285, GRAMMAR_131), // 172
  SE_RULE(loadAdjustmentPercentageOffset, 1, GRAMMAR_125, GRAMMAR_131), // 173
  RULE(CH, INTEGER, NONE, 1, GRAMMAR_125), // 174
  RULE(CH, UNSIGNED_INTEGER, NONE, 1, GRAMMAR_125), // 175
  SE_RULE(batteryInstallTime, 0, GRAMMAR_286, GRAMMAR_108), // 176
  SE_RULE(lowChargeThreshold, 1, GRAMMAR_125, GRAMMAR_140), // 177
  RULE(AT, UNSIGNED_INTEGER, all, 1, GRAMMAR_287), // 178
  RULE(AT, UNSIGNED_INTEGER, all, 1, GRAMMAR_288), // 179
  RULE(AT, STRING, href, 0, GRAMMAR_289), // 180
  RULE(AT, STRING, replyTo, 0, GRAMMAR_290), // 181
  RULE(AT, BINARY, responseRequired, 0, GRAMMAR_291), // 182
  NBIT_RULE(AT, subscribable, 0, GRAMMAR_292, 8), // 183
  SE_RULE(mRID, 1, GRAMMAR_293, GRAMMAR_112), // 184
  SE_RULE(multiplier, 1, GRAMMAR_294, GRAMMAR_70), // 185
  RULE(AT, STRING, href, 0, GRAMMAR_295), // 186
  RULE(AT, STRING, replyTo, 0, GRAMMAR_296), // 187
  RULE(AT, BINARY, responseRequired, 1, GRAMMAR_125), // 188
  RULE(AT, STRING, href, 0, GRAMMAR_297), // 189
  RULE(AT, STRING, replyTo, 0, GRAMMAR_298), // 190
  RULE(AT, BINARY, responseRequired, 0, GRAMMAR_299), // 191
  NBIT_RULE(AT, subscribable, 0, GRAMMAR_300, 8), // 192
  SE_RULE(mRID, 1, GRAMMAR_301, GRAMMAR_112), // 193
  RULE(AT, STRING, href, 0, GRAMMAR_302), // 194
  SE_RULE(createdDateTime, 0, GRAMMAR_303, GRAMMAR_108), // 195
  SE_RULE(endDeviceLFDI, 1, GRAMMAR_304, GRAMMAR_163), // 196
  RULE(AT, UNSIGNED_INTEGER, all, 1, GRAMMAR_305), // 197
  RULE(AT, STRING, href, 0, GRAMMAR_306), // 198
  NBIT_RULE(AT, subscribable, 0, GRAMMAR_307, 8), // 199
  SE_RULE(ConfigurationLink, 0, GRAMMAR_308, GRAMMAR_9), // 200
  SE_RULE(DERListLink, 0, GRAMMAR_309, GRAMMAR_11), // 201
  SE_RULE(DeviceInformationLink, 0, GRAMMAR_310, GRAMMAR_22), // 202
  SE_RULE(DeviceStatusLink, 0, GRAMMAR_311, GRAMMAR_24), // 203
  SE_RULE(FileStatusLink, 0, GRAMMAR_312, GRAMMAR_39), // 204
  SE_RULE(IPInterfaceListLink, 0, GRAMMAR_313, GRAMMAR_48), // 205
  SE_RULE(LoadShedAvailabilityLink, 0, GRAMMAR_314, GRAMMAR_55), // 206
  SE_RULE(loadShedDeviceCategory, 0, GRAMMAR_315, GRAMMAR_20), // 207
  SE_RULE(LogEventListLink, 0, GRAMMAR_316, GRAMMAR_59), // 208
  SE_RULE(PowerStatusLink, 0, GRAMMAR_317, GRAMMAR_72), // 209
  SE_RULE(sFDI, 1, GRAMMAR_125, GRAMMAR_85), // 210
  SE_RULE(coolingSetpoint, 0, GRAMMAR_318, GRAMMAR_319), // 211
  SE_RULE(heatingSetpoint, 1, GRAMMAR_125, GRAMMAR_319), // 212
  RULE(AT, STRING, href, 0, GRAMMAR_320), // 213
  NBIT_RULE(AT, subscribable, 0, GRAMMAR_321, 8), // 214
  SE_RULE(mRID, 1, GRAMMAR_322, GRAMMAR_112), // 215
  RULE(AT, UNSIGNED_INTEGER, all, 1, GRAMMAR_323), // 216
  RULE(AT, STRING, href, 0, GRAMMAR_324), // 217
  NBIT_RULE(AT, subscribable, 1, GRAMMAR_125, 8), // 218
  RULE(AT, STRING, href, 0, GRAMMAR_325), // 219
  SE_RULE(subscribedResource, 1, GRAMMAR_326, GRAMMAR_200), // 220
  RULE(AT, STRING, href, 0, GRAMMAR_327), // 221
  SE_RULE(subscribedResource, 1, GRAMMAR_125, GRAMMAR_200), // 222
  RULE(AT, UNSIGNED_INTEGER, all, 1, GRAMMAR_328), // 223
  RULE(AT, UNSIGNED_INTEGER, all, 1, GRAMMAR_329), // 224
  RULE(AT, UNSIGNED_INTEGER, all, 1, GRAMMAR_330), // 225
  SE_RULE(type, 1, GRAMMAR_331, GRAMMAR_109), // 226
  RULE(AT, UNSIGNED_INTEGER, all, 1, GRAMMAR_332), // 227
  SE_RULE(multiplier, 1, GRAMMAR_333, GRAMMAR_70), // 228
  RULE(AT, STRING, href, 0, GRAMMAR_334), // 229
  RULE(AT, STRING, replyTo, 0, GRAMMAR_335), // 230
  RULE(AT, BINARY, responseRequired, 0, GRAMMAR_336), // 231
  NBIT_RULE(AT, subscribable, 0, GRAMMAR_337, 8), // 232
  SE_RULE(mRID, 1, GRAMMAR_338, GRAMMAR_112), // 233
  RULE(AT, UNSIGNED_INTEGER, all, 1, GRAMMAR_339), // 234
  RULE(AT, UNSIGNED_INTEGER, all, 1, GRAMMAR_340), // 235
  RULE(AT, STRING, href, 0, GRAMMAR_341), // 236
  SE_RULE(createdDateTime, 0, GRAMMAR_342, GRAMMAR_108), // 237
  SE_RULE(endDeviceLFDI, 1, GRAMMAR_343, GRAMMAR_163), // 238
  RULE(AT, STRING, href, 0, GRAMMAR_344), // 239
  SE_RULE(currentTime, 1, GRAMMAR_345, GRAMMAR_108), // 240
  SE_RULE(dstEndRule, 1, GRAMMAR_346, GRAMMAR_26), // 241
  RULE(AT, UNSIGNED_INTEGER, all, 1, GRAMMAR_347), // 242
  SE_RULE(value, 1, GRAMMAR_125, GRAMMAR_319), // 243
  SE_RULE(value, 1, GRAMMAR_125, GRAMMAR_257), // 244
  SE_RULE(lowerThreshold, 1, GRAMMAR_348, GRAMMAR_349), // 245
  SE_RULE(PowerConfiguration, 0, GRAMMAR_350, GRAMMAR_69), // 246
  SE_RULE(PriceResponseCfgListLink, 0, GRAMMAR_351, GRAMMAR_74), // 247
  SE_RULE(TimeConfiguration, 0, GRAMMAR_352, GRAMMAR_105), // 248
  SE_RULE(userDeviceName, 1, GRAMMAR_125, GRAMMAR_353), // 249
  SE_RULE(maxDemand, 1, GRAMMAR_354, GRAMMAR_2), // 250
  SE_RULE(start, 1, GRAMMAR_125, GRAMMAR_108), // 251
  SE_RULE(description, 0, GRAMMAR_355, GRAMMAR_353), // 252
  SE_RULE(version, 0, GRAMMAR_356, GRAMMAR_111), // 253
  SE_RULE(ActiveEndDeviceControlListLink, 0, GRAMMAR_357, GRAMMAR_1), // 254
  SE_RULE(availabilityUpdatePercentChangeThreshold, 0, GRAMMAR_358, GRAMMAR_68), // 255
  SE_RULE(availabilityUpdatePowerChangeThreshold, 0, GRAMMAR_359, GRAMMAR_2), // 256
  SE_RULE(EndDeviceControlListLink, 0, GRAMMAR_360, GRAMMAR_31), // 257
  SE_RULE(primacy, 1, GRAMMAR_125, GRAMMAR_75), // 258
  RULE(AT, STRING, href, 0, GRAMMAR_361), // 259
  NBIT_RULE(AT, results, 1, GRAMMAR_362, 8), // 260
  SE_RULE(mfDate, 1, GRAMMAR_363, GRAMMAR_108), // 261
  SE_RULE(onCount, 0, GRAMMAR_364, GRAMMAR_257), // 262
  SE_RULE(opState, 0, GRAMMAR_365, GRAMMAR_131), // 263
  SE_RULE(opTime, 0, GRAMMAR_366, GRAMMAR_140), // 264
  SE_RULE(Temperature, 0, GRAMMAR_367, GRAMMAR_99), // 265
  SE_RULE(TimeLink, 1, GRAMMAR_125, GRAMMAR_106), // 266
  SE_RULE(status, 0, GRAMMAR_368, GRAMMAR_131), // 267
  SE_RULE(subject, 1, GRAMMAR_369, GRAMMAR_112), // 268
  SE_RULE(FlowReservationRequestListLink, 0, GRAMMAR_370, GRAMMAR_40), // 269
  SE_RULE(FlowReservationResponseListLink, 0, GRAMMAR_371, GRAMMAR_41), // 270
  SE_RULE(FunctionSetAssignmentsListLink, 0, GRAMMAR_372, GRAMMAR_45), // 271
  SE_RULE(RegistrationLink, 0, GRAMMAR_373, GRAMMAR_79), // 272
  SE_RULE(SubscriptionListLink, 1, GRAMMAR_125, GRAMMAR_95), // 273
  SE_RULE(description, 0, GRAMMAR_374, GRAMMAR_353), // 274
  SE_RULE(version, 0, GRAMMAR_375, GRAMMAR_111), // 275
  SE_RULE(creationTime, 1, GRAMMAR_376, GRAMMAR_108), // 276
  RULE(AT, STRING, href, 0, GRAMMAR_377), // 277
  NBIT_RULE(AT, results, 1, GRAMMAR_378, 8), // 278
  RULE(AT, STRING, href, 0, GRAMMAR_379), // 279
  NBIT_RULE(AT, results, 1, GRAMMAR_380, 8), // 280
  SE_RULE(description, 0, GRAMMAR_381, GRAMMAR_353), // 281
  SE_RULE(version, 0, GRAMMAR_382, GRAMMAR_111), // 282
  SE_RULE(creationTime, 1, GRAMMAR_383, GRAMMAR_108), // 283
  SE_RULE(dateTime, 1, GRAMMAR_384, GRAMMAR_108), // 284
  SE_RULE(lFDI, 0, GRAMMAR_385, GRAMMAR_163), // 285
  SE_RULE(mfHwVer, 0, GRAMMAR_386, GRAMMAR_353), // 286
  SE_RULE(mfID, 1, GRAMMAR_387, GRAMMAR_67), // 287
  RULE(AT, STRING, href, 0, GRAMMAR_388), // 288
  NBIT_RULE(AT, results, 1, GRAMMAR_389, 8), // 289
  SE_RULE(description, 0, GRAMMAR_390, GRAMMAR_353), // 290
  SE_RULE(version, 1, GRAMMAR_125, GRAMMAR_111), // 291
  RULE(AT, STRING, href, 0, GRAMMAR_391), // 292
  NBIT_RULE(AT, results, 1, GRAMMAR_392, 8), // 293
  RULE(CH, BOOLEAN, NONE, 1, GRAMMAR_125), // 294
  SE_RULE(description, 0, GRAMMAR_393, GRAMMAR_353), // 295
  SE_RULE(version, 1, GRAMMAR_125, GRAMMAR_111), // 296
  RULE(AT, STRING, href, 0, GRAMMAR_394), // 297
  NBIT_RULE(AT, results, 1, GRAMMAR_125, 8), // 298
  SE_RULE(extendedData, 0, GRAMMAR_395, GRAMMAR_140), // 299
  SE_RULE(functionSet, 1, GRAMMAR_396, GRAMMAR_131), // 300
  RULE(AT, STRING, href, 0, GRAMMAR_397), // 301
  NBIT_RULE(AT, results, 1, GRAMMAR_398, 8), // 302
  SE_RULE(description, 0, GRAMMAR_399, GRAMMAR_353), // 303
  SE_RULE(version, 0, GRAMMAR_400, GRAMMAR_111), // 304
  SE_RULE(ActiveTextMessageListLink, 0, GRAMMAR_401, GRAMMAR_3), // 305
  SE_RULE(locale, 1, GRAMMAR_402, GRAMMAR_56), // 306
  RULE(AT, STRING, href, 0, GRAMMAR_403), // 307
  NBIT_RULE(AT, results, 1, GRAMMAR_404, 8), // 308
  SE_RULE(newResourceURI, 0, GRAMMAR_405, GRAMMAR_200), // 309
  SE_RULE(Resource, 0, GRAMMAR_406, GRAMMAR_80), // 310
  SE_RULE(status, 1, GRAMMAR_407, GRAMMAR_131), // 311
  SE_RULE(description, 0, GRAMMAR_408, GRAMMAR_353), // 312
  SE_RULE(version, 0, GRAMMAR_409, GRAMMAR_111), // 313
  SE_RULE(creationTime, 1, GRAMMAR_410, GRAMMAR_108), // 314
  SE_RULE(value, 1, GRAMMAR_125, GRAMMAR_411), // 315
  SE_RULE(description, 0, GRAMMAR_412, GRAMMAR_353), // 316
  SE_RULE(version, 1, GRAMMAR_125, GRAMMAR_111), // 317
  SE_RULE(status, 0, GRAMMAR_413, GRAMMAR_131), // 318
  SE_RULE(subject, 1, GRAMMAR_125, GRAMMAR_112), // 319
  SE_RULE(description, 0, GRAMMAR_414, GRAMMAR_353), // 320
  SE_RULE(version, 1, GRAMMAR_125, GRAMMAR_111), // 321
  RULE(AT, STRING, href, 0, GRAMMAR_415), // 322
  NBIT_RULE(AT, results, 1, GRAMMAR_416, 8), // 323
  SE_RULE(Condition, 0, GRAMMAR_417, GRAMMAR_7), // 324
  SE_RULE(encoding, 1, GRAMMAR_418, GRAMMAR_131), // 325
  RULE(AT, STRING, href, 0, GRAMMAR_419), // 326
  NBIT_RULE(AT, results, 1, GRAMMAR_420, 8), // 327
  SE_RULE(subject, 1, GRAMMAR_421, GRAMMAR_131), // 328
  SE_RULE(description, 0, GRAMMAR_422, GRAMMAR_353), // 329
  SE_RULE(version, 0, GRAMMAR_423, GRAMMAR_111), // 330
  SE_RULE(creationTime, 1, GRAMMAR_424, GRAMMAR_108), // 331
  RULE(AT, STRING, href, 0, GRAMMAR_425), // 332
  NBIT_RULE(AT, results, 1, GRAMMAR_426, 8), // 333
  SE_RULE(status, 0, GRAMMAR_427, GRAMMAR_131), // 334
  SE_RULE(subject, 1, GRAMMAR_125, GRAMMAR_112), // 335
  SE_RULE(dstEndTime, 1, GRAMMAR_428, GRAMMAR_108), // 336
  SE_RULE(dstOffset, 1, GRAMMAR_429, GRAMMAR_107), // 337
  SE_RULE(upperThreshold, 1, GRAMMAR_125, GRAMMAR_349), // 338
  SE_RULE(optionsImplemented, 1, GRAMMAR_125, GRAMMAR_430), // 339
  NBIT_RULE(AT, subscribable, 0, GRAMMAR_431, 8), // 340
  SE_RULE(DemandResponseProgram, 1, GRAMMAR_432, GRAMMAR_15), // 341
  SE_RULE(mfHwVer, 1, GRAMMAR_433, GRAMMAR_353), // 342
  SE_RULE(ApplianceLoadReduction, 0, GRAMMAR_434, GRAMMAR_4), // 343
  SE_RULE(AppliedTargetReduction, 0, GRAMMAR_435, GRAMMAR_6), // 344
  SE_RULE(DutyCycle, 0, GRAMMAR_436, GRAMMAR_27), // 345
  SE_RULE(Offset, 0, GRAMMAR_437, GRAMMAR_65), // 346
  SE_RULE(overrideDuration, 0, GRAMMAR_438, GRAMMAR_257), // 347
  SE_RULE(SetPoint, 1, GRAMMAR_125, GRAMMAR_88), // 348
  SE_RULE(EventStatus, 1, GRAMMAR_439, GRAMMAR_35), // 349
  NBIT_RULE(AT, subscribable, 0, GRAMMAR_440, 8), // 350
  SE_RULE(EndDeviceControl, 1, GRAMMAR_441, GRAMMAR_29), // 351
  NBIT_RULE(AT, subscribable, 0, GRAMMAR_442, 8), // 352
  SE_RULE(EndDevice, 1, GRAMMAR_443, GRAMMAR_28), // 353
  SE_RULE(EventStatus, 1, GRAMMAR_444, GRAMMAR_35), // 354
  SE_RULE(potentiallySuperseded, 1, GRAMMAR_445, GRAMMAR_254), // 355
  SE_RULE(mfModel, 1, GRAMMAR_446, GRAMMAR_353), // 356
  SE_RULE(File, 1, GRAMMAR_447, GRAMMAR_36), // 357
  NBIT_RULE(AT, subscribable, 0, GRAMMAR_448, 8), // 358
  SE_RULE(FunctionSetAssignments, 1, GRAMMAR_449, GRAMMAR_42), // 359
  SE_RULE(logEventCode, 1, GRAMMAR_450, GRAMMAR_131), // 360
  NBIT_RULE(AT, subscribable, 0, GRAMMAR_451, 8), // 361
  SE_RULE(LogEvent, 1, GRAMMAR_452, GRAMMAR_57), // 362
  SE_RULE(primacy, 1, GRAMMAR_453, GRAMMAR_75), // 363
  NBIT_RULE(AT, subscribable, 0, GRAMMAR_454, 8), // 364
  SE_RULE(MessagingProgram, 1, GRAMMAR_455, GRAMMAR_60), // 365
  SE_RULE(subscriptionURI, 1, GRAMMAR_125, GRAMMAR_200), // 366
  SE_RULE(EventStatus, 1, GRAMMAR_456, GRAMMAR_35), // 367
  SE_RULE(level, 1, GRAMMAR_457, GRAMMAR_245), // 368
  SE_RULE(Subscription, 1, GRAMMAR_458, GRAMMAR_92), // 369
  SE_RULE(EventStatus, 1, GRAMMAR_459, GRAMMAR_35), // 370
  NBIT_RULE(AT, subscribable, 0, GRAMMAR_460, 8), // 371
  SE_RULE(TextMessage, 1, GRAMMAR_461, GRAMMAR_100), // 372
  SE_RULE(dstOffset, 1, GRAMMAR_462, GRAMMAR_107), // 373
  SE_RULE(dstStartRule, 1, GRAMMAR_463, GRAMMAR_26), // 374
  SE_RULE(mfID, 1, GRAMMAR_464, GRAMMAR_67), // 375
  SE_RULE(interval, 1, GRAMMAR_465, GRAMMAR_14), // 376
  SE_RULE(interval, 1, GRAMMAR_125, GRAMMAR_14), // 377
  SE_RULE(potentiallySupersededTime, 0, GRAMMAR_466, GRAMMAR_108), // 378
  SE_RULE(reason, 1, GRAMMAR_125, GRAMMAR_233), // 379
  SE_RULE(mfSerNum, 0, GRAMMAR_467, GRAMMAR_353), // 380
  SE_RULE(mfVer, 1, GRAMMAR_468, GRAMMAR_245), // 381
  SE_RULE(logEventID, 1, GRAMMAR_469, GRAMMAR_257), // 382
  SE_RULE(TextMessageListLink, 1, GRAMMAR_125, GRAMMAR_102), // 383
  SE_RULE(interval, 1, GRAMMAR_470, GRAMMAR_14), // 384
  SE_RULE(limit, 1, GRAMMAR_471, GRAMMAR_257), // 385
  SE_RULE(interval, 1, GRAMMAR_472, GRAMMAR_14), // 386
  SE_RULE(dstStartTime, 1, GRAMMAR_473, GRAMMAR_108), // 387
  SE_RULE(tzOffset, 1, GRAMMAR_125, GRAMMAR_107), // 388
  SE_RULE(mfInfo, 0, GRAMMAR_474, GRAMMAR_353), // 389
  SE_RULE(mfModel, 1, GRAMMAR_475, GRAMMAR_353), // 390
  SE_RULE(randomizeDuration, 0, GRAMMAR_476, GRAMMAR_66), // 391
  SE_RULE(randomizeStart, 0, GRAMMAR_477, GRAMMAR_66), // 392
  SE_RULE(ApplianceLoadReduction, 0, GRAMMAR_478, GRAMMAR_4), // 393
  SE_RULE(deviceCategory, 1, GRAMMAR_479, GRAMMAR_20), // 394
  SE_RULE(size, 1, GRAMMAR_480, GRAMMAR_140), // 395
  SE_RULE(logEventPEN, 1, GRAMMAR_481, GRAMMAR_67), // 396
  SE_RULE(randomizeDuration, 0, GRAMMAR_482, GRAMMAR_66), // 397
  SE_RULE(randomizeStart, 1, GRAMMAR_125, GRAMMAR_66), // 398
  SE_RULE(notificationURI, 1, GRAMMAR_125, GRAMMAR_200), // 399
  SE_RULE(originator, 0, GRAMMAR_483, GRAMMAR_484), // 400
  SE_RULE(priority, 1, GRAMMAR_485, GRAMMAR_76), // 401
  SE_RULE(localTime, 0, GRAMMAR_486, GRAMMAR_108), // 402
  SE_RULE(quality, 1, GRAMMAR_487, GRAMMAR_131), // 403
  SE_RULE(mfSerNum, 1, GRAMMAR_488, GRAMMAR_353), // 404
  SE_RULE(drProgramMandatory, 1, GRAMMAR_489, GRAMMAR_254), // 405
  SE_RULE(type, 1, GRAMMAR_125, GRAMMAR_490), // 406
  SE_RULE(profileID, 1, GRAMMAR_125, GRAMMAR_131), // 407
  SE_RULE(textMessage, 1, GRAMMAR_125, GRAMMAR_491), // 408
  SE_RULE(primaryPower, 1, GRAMMAR_492, GRAMMAR_71), // 409
  SE_RULE(DutyCycle, 0, GRAMMAR_493, GRAMMAR_27), // 410
  SE_RULE(loadShiftForward, 1, GRAMMAR_494, GRAMMAR_254), // 411
  SE_RULE(secondaryPower, 1, GRAMMAR_495, GRAMMAR_71), // 412
  SE_RULE(Offset, 0, GRAMMAR_496, GRAMMAR_65), // 413
  SE_RULE(overrideDuration, 0, GRAMMAR_497, GRAMMAR_257), // 414
  SE_RULE(SetPoint, 0, GRAMMAR_498, GRAMMAR_88), // 415
  SE_RULE(TargetReduction, 1, GRAMMAR_125, GRAMMAR_97), // 416
  SE_RULE(SupportedLocaleListLink, 0, GRAMMAR_499, GRAMMAR_96), // 417
  SE_RULE(swActTime, 1, GRAMMAR_500, GRAMMAR_108), // 418
  SE_RULE(swVer, 1, GRAMMAR_125, GRAMMAR_353), // 419
};

static const EmberExiGrammar grammars[] = {

// Grammar count: 501
  GRAMMAR_0,
  GRAMMAR_1,
  GRAMMAR_2,
  GRAMMAR_3,
  GRAMMAR_4,
  GRAMMAR_5,
  GRAMMAR_6,
  GRAMMAR_7,
  GRAMMAR_8,
  GRAMMAR_9,
  GRAMMAR_10,
  GRAMMAR_11,
  GRAMMAR_12,
  GRAMMAR_13,
  GRAMMAR_14,
  GRAMMAR_15,
  GRAMMAR_16,
  GRAMMAR_17,
  GRAMMAR_18,
  GRAMMAR_19,
  GRAMMAR_20,
  GRAMMAR_21,
  GRAMMAR_22,
  GRAMMAR_23,
  GRAMMAR_24,
  GRAMMAR_25,
  GRAMMAR_26,
  GRAMMAR_27,
  GRAMMAR_28,
  GRAMMAR_29,
  GRAMMAR_30,
  GRAMMAR_31,
  GRAMMAR_32,
  GRAMMAR_33,
  GRAMMAR_34,
  GRAMMAR_35,
  GRAMMAR_36,
  GRAMMAR_37,
  GRAMMAR_38,
  GRAMMAR_39,
  GRAMMAR_40,
  GRAMMAR_41,
  GRAMMAR_42,
  GRAMMAR_43,
  GRAMMAR_44,
  GRAMMAR_45,
  GRAMMAR_46,
  GRAMMAR_47,
  GRAMMAR_48,
  GRAMMAR_49,
  GRAMMAR_50,
  GRAMMAR_51,
  GRAMMAR_52,
  GRAMMAR_53,
  GRAMMAR_54,
  GRAMMAR_55,
  GRAMMAR_56,
  GRAMMAR_57,
  GRAMMAR_58,
  GRAMMAR_59,
  GRAMMAR_60,
  GRAMMAR_61,
  GRAMMAR_62,
  GRAMMAR_63,
  GRAMMAR_64,
  GRAMMAR_65,
  GRAMMAR_66,
  GRAMMAR_67,
  GRAMMAR_68,
  GRAMMAR_69,
  GRAMMAR_70,
  GRAMMAR_71,
  GRAMMAR_72,
  GRAMMAR_73,
  GRAMMAR_74,
  GRAMMAR_75,
  GRAMMAR_76,
  GRAMMAR_77,
  GRAMMAR_78,
  GRAMMAR_79,
  GRAMMAR_80,
  GRAMMAR_81,
  GRAMMAR_82,
  GRAMMAR_83,
  GRAMMAR_84,
  GRAMMAR_85,
  GRAMMAR_86,
  GRAMMAR_87,
  GRAMMAR_88,
  GRAMMAR_89,
  GRAMMAR_90,
  GRAMMAR_91,
  GRAMMAR_92,
  GRAMMAR_93,
  GRAMMAR_94,
  GRAMMAR_95,
  GRAMMAR_96,
  GRAMMAR_97,
  GRAMMAR_98,
  GRAMMAR_99,
  GRAMMAR_100,
  GRAMMAR_101,
  GRAMMAR_102,
  GRAMMAR_103,
  GRAMMAR_104,
  GRAMMAR_105,
  GRAMMAR_106,
  GRAMMAR_107,
  GRAMMAR_108,
  GRAMMAR_109,
  GRAMMAR_110,
  GRAMMAR_111,
  GRAMMAR_112,
  GRAMMAR_113,
  GRAMMAR_114,
  GRAMMAR_115,
  GRAMMAR_116,
  GRAMMAR_117,
  GRAMMAR_118,
  GRAMMAR_119,
  GRAMMAR_120,
  GRAMMAR_121,
  GRAMMAR_122,
  GRAMMAR_123,
  GRAMMAR_124,
  GRAMMAR_125,
  GRAMMAR_126,
  GRAMMAR_127,
  GRAMMAR_128,
  GRAMMAR_129,
  GRAMMAR_130,
  GRAMMAR_131,
  GRAMMAR_132,
  GRAMMAR_133,
  GRAMMAR_134,
  GRAMMAR_135,
  GRAMMAR_136,
  GRAMMAR_137,
  GRAMMAR_138,
  GRAMMAR_139,
  GRAMMAR_140,
  GRAMMAR_141,
  GRAMMAR_142,
  GRAMMAR_143,
  GRAMMAR_144,
  GRAMMAR_145,
  GRAMMAR_146,
  GRAMMAR_147,
  GRAMMAR_148,
  GRAMMAR_149,
  GRAMMAR_150,
  GRAMMAR_151,
  GRAMMAR_152,
  GRAMMAR_153,
  GRAMMAR_154,
  GRAMMAR_155,
  GRAMMAR_156,
  GRAMMAR_157,
  GRAMMAR_158,
  GRAMMAR_159,
  GRAMMAR_160,
  GRAMMAR_161,
  GRAMMAR_162,
  GRAMMAR_163,
  GRAMMAR_164,
  GRAMMAR_165,
  GRAMMAR_166,
  GRAMMAR_167,
  GRAMMAR_168,
  GRAMMAR_169,
  GRAMMAR_170,
  GRAMMAR_171,
  GRAMMAR_172,
  GRAMMAR_173,
  GRAMMAR_174,
  GRAMMAR_175,
  GRAMMAR_176,
  GRAMMAR_177,
  GRAMMAR_178,
  GRAMMAR_179,
  GRAMMAR_180,
  GRAMMAR_181,
  GRAMMAR_182,
  GRAMMAR_183,
  GRAMMAR_184,
  GRAMMAR_185,
  GRAMMAR_186,
  GRAMMAR_187,
  GRAMMAR_188,
  GRAMMAR_189,
  GRAMMAR_190,
  GRAMMAR_191,
  GRAMMAR_192,
  GRAMMAR_193,
  GRAMMAR_194,
  GRAMMAR_195,
  GRAMMAR_196,
  GRAMMAR_197,
  GRAMMAR_198,
  GRAMMAR_199,
  GRAMMAR_200,
  GRAMMAR_201,
  GRAMMAR_202,
  GRAMMAR_203,
  GRAMMAR_204,
  GRAMMAR_205,
  GRAMMAR_206,
  GRAMMAR_207,
  GRAMMAR_208,
  GRAMMAR_209,
  GRAMMAR_210,
  GRAMMAR_211,
  GRAMMAR_212,
  GRAMMAR_213,
  GRAMMAR_214,
  GRAMMAR_215,
  GRAMMAR_216,
  GRAMMAR_217,
  GRAMMAR_218,
  GRAMMAR_219,
  GRAMMAR_220,
  GRAMMAR_221,
  GRAMMAR_222,
  GRAMMAR_223,
  GRAMMAR_224,
  GRAMMAR_225,
  GRAMMAR_226,
  GRAMMAR_227,
  GRAMMAR_228,
  GRAMMAR_229,
  GRAMMAR_230,
  GRAMMAR_231,
  GRAMMAR_232,
  GRAMMAR_233,
  GRAMMAR_234,
  GRAMMAR_235,
  GRAMMAR_236,
  GRAMMAR_237,
  GRAMMAR_238,
  GRAMMAR_239,
  GRAMMAR_240,
  GRAMMAR_241,
  GRAMMAR_242,
  GRAMMAR_243,
  GRAMMAR_244,
  GRAMMAR_245,
  GRAMMAR_246,
  GRAMMAR_247,
  GRAMMAR_248,
  GRAMMAR_249,
  GRAMMAR_250,
  GRAMMAR_251,
  GRAMMAR_252,
  GRAMMAR_253,
  GRAMMAR_254,
  GRAMMAR_255,
  GRAMMAR_256,
  GRAMMAR_257,
  GRAMMAR_258,
  GRAMMAR_259,
  GRAMMAR_260,
  GRAMMAR_261,
  GRAMMAR_262,
  GRAMMAR_263,
  GRAMMAR_264,
  GRAMMAR_265,
  GRAMMAR_266,
  GRAMMAR_267,
  GRAMMAR_268,
  GRAMMAR_269,
  GRAMMAR_270,
  GRAMMAR_271,
  GRAMMAR_272,
  GRAMMAR_273,
  GRAMMAR_274,
  GRAMMAR_275,
  GRAMMAR_276,
  GRAMMAR_277,
  GRAMMAR_278,
  GRAMMAR_279,
  GRAMMAR_280,
  GRAMMAR_281,
  GRAMMAR_282,
  GRAMMAR_283,
  GRAMMAR_284,
  GRAMMAR_285,
  GRAMMAR_286,
  GRAMMAR_287,
  GRAMMAR_288,
  GRAMMAR_289,
  GRAMMAR_290,
  GRAMMAR_291,
  GRAMMAR_292,
  GRAMMAR_293,
  GRAMMAR_294,
  GRAMMAR_295,
  GRAMMAR_296,
  GRAMMAR_297,
  GRAMMAR_298,
  GRAMMAR_299,
  GRAMMAR_300,
  GRAMMAR_301,
  GRAMMAR_302,
  GRAMMAR_303,
  GRAMMAR_304,
  GRAMMAR_305,
  GRAMMAR_306,
  GRAMMAR_307,
  GRAMMAR_308,
  GRAMMAR_309,
  GRAMMAR_310,
  GRAMMAR_311,
  GRAMMAR_312,
  GRAMMAR_313,
  GRAMMAR_314,
  GRAMMAR_315,
  GRAMMAR_316,
  GRAMMAR_317,

};
#define DEFINE_EXI_GRAMMAR(prefix, grammarSetName) \
EmberExiGrammarSet grammarSetName = { 318, 9, 10, topLevelQnames, qnameSparseEventCodes, grammars, productions}; \
const char * const grammarSetName##XsdFile = "sep_r60.xsd";

#endif // __EMBER_EXI_GENERATED_FILE_GRAMMAR__
